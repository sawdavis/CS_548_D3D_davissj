import pytest
import numpy as np
import open3d as o3d
import os
import Assign02 as A02

DATA_DIR = os.path.join("data", "assign02")
RTOL = 1e-6
ATOL = 1e-6

###############################################################################
# test_get_best_AABB
###############################################################################

cloud_bounds_list = [
    ("tiny_cube.pcd", None, (-1,-1,-1), (1,1,1)),   
    ("tiny_cube.pcd", (0.2, 0.3, 0.1), (-1.2,-1.3,-1.1), (1.2,1.3,1.1)),   
    
    ("small_cube.pcd", None, (-3,-3,-3), (3,3,3)),    
    ("small_cube.pcd", (0.1, 0.2, 0.3), (-3.1,-3.2,-3.3), (3.1,3.2,3.3)),    
    
    ("medium_cube.pcd", None, (-3,5,2), (2,12,11)),     
    ("medium_cube.pcd", (0.8, 0.1, 0.3), (-3.8,4.9,1.7), (2.8,12.1,11.3)),  
       
    ("bunny.pcd", None, (0.007591, 0.025406, 0.01606), (9.983815,  9.916933, 10.0)),   
    ("bunny.pcd", (0.1, 0.2, 0.3), (-0.092409, -0.174594, -0.28394), (10.083815, 10.116933, 10.3)),
    
    ("small_bunny.pcd", None, (5.11878 , 0.046646, 3.32056), (14.961843,  9.680432, 12.810671)),   
    ("small_bunny.pcd", (0.1, 0.2, 0.3), (5.01878 , -0.153354,  3.02056), (15.061843,  9.880432, 13.110671))     
]

@pytest.mark.parametrize("filename, margin, ground_minP, ground_maxP", cloud_bounds_list)    
def test_get_best_AABB(filename, margin, ground_minP, ground_maxP):
    # Load cloud
    cloud = o3d.io.read_point_cloud(os.path.join(DATA_DIR, filename))
    
    # Get the box
    if margin is None:
        minP, maxP = A02.get_best_AABB(cloud)
    else:
        minP, maxP = A02.get_best_AABB(cloud, np.array(margin))
    
    # Check minP
    np.testing.assert_allclose(minP, ground_minP, RTOL, ATOL, err_msg="Wrong minimum point!")
    
    # Check maxP
    np.testing.assert_allclose(maxP, ground_maxP, RTOL, ATOL, err_msg="Wrong maximum point!")

###############################################################################
# test_split_box_octree
###############################################################################

split_list = [
    ((-1.2,-1.3,-1.1), (1.2,1.3,1.1), 
    [
        [ [-1.2, -1.3, -1.1] , [0.0, 0.0, 0.0] ],
        [ [0.0, -1.3, -1.1] , [1.2, 0.0, 0.0] ],
        [ [-1.2, 0.0, -1.1] , [0.0, 1.3, 0.0] ],
        [ [0.0, 0.0, -1.1] , [1.2, 1.3, 0.0] ],
        [ [-1.2, -1.3, 0.0] , [0.0, 0.0, 1.1] ],
        [ [0.0, -1.3, 0.0] , [1.2, 0.0, 1.1] ],
        [ [-1.2, 0.0, 0.0] , [0.0, 1.3, 1.1] ],
        [ [0.0, 0.0, 0.0] , [1.2, 1.3, 1.1] ],
    ]), 
     
    ((-3.1,-3.2,-3.3), (3.1,3.2,3.3),    
    [
        [ [-3.1, -3.2, -3.3] , [0.0, 0.0, 0.0] ],
        [ [0.0, -3.2, -3.3] , [3.1, 0.0, 0.0] ],
        [ [-3.1, 0.0, -3.3] , [0.0, 3.2, 0.0] ],
        [ [0.0, 0.0, -3.3] , [3.1, 3.2, 0.0] ],
        [ [-3.1, -3.2, 0.0] , [0.0, 0.0, 3.3] ],
        [ [0.0, -3.2, 0.0] , [3.1, 0.0, 3.3] ],
        [ [-3.1, 0.0, 0.0] , [0.0, 3.2, 3.3] ],
        [ [0.0, 0.0, 0.0] , [3.1, 3.2, 3.3] ],
    ]),  
    
    ((-3.8,4.9,1.7), (2.8,12.1,11.3),  
    [
        [ [-3.8, 4.9, 1.7] , [-0.5, 8.5, 6.5] ],
        [ [-0.5, 4.9, 1.7] , [2.8, 8.5, 6.5] ],
        [ [-3.8, 8.5, 1.7] , [-0.5, 12.1, 6.5] ],
        [ [-0.5, 8.5, 1.7] , [2.8, 12.1, 6.5] ],
        [ [-3.8, 4.9, 6.5] , [-0.5, 8.5, 11.3] ],
        [ [-0.5, 4.9, 6.5] , [2.8, 8.5, 11.3] ],
        [ [-3.8, 8.5, 6.5] , [-0.5, 12.1, 11.3] ],
        [ [-0.5, 8.5, 6.5] , [2.8, 12.1, 11.3] ], 
    ]),   
       
    ((-0.092409, -0.174594, -0.28394), (10.083815, 10.116933, 10.3),
    [
        [ [-0.092409, -0.174594, -0.28394] , [4.995703, 4.9711695, 5.00803] ],
        [ [4.995703, -0.174594, -0.28394] , [10.083815, 4.9711695, 5.00803] ],
        [ [-0.092409, 4.9711695, -0.28394] , [4.995703, 10.116933, 5.00803] ],
        [ [4.995703, 4.9711695, -0.28394] , [10.083815, 10.116933, 5.00803] ],
        [ [-0.092409, -0.174594, 5.00803] , [4.995703, 4.9711695, 10.3] ],
        [ [4.995703, -0.174594, 5.00803] , [10.083815, 4.9711695, 10.3] ],
        [ [-0.092409, 4.9711695, 5.00803] , [4.995703, 10.116933, 10.3] ],
        [ [4.995703, 4.9711695, 5.00803] , [10.083815, 10.116933, 10.3] ],
    ]), 
]

@pytest.mark.parametrize("minP, maxP, ground_boxes", split_list)    
def test_split_box_octree(minP, maxP, ground_boxes):
    # Get boxes
    boxes = A02.split_box_octree(np.array(minP), np.array(maxP))
        
    # For each box...
    for i in range(len(boxes)):
        box = boxes[i]
        np.testing.assert_allclose(box, ground_boxes[i], RTOL, ATOL,
                                   err_msg="Wrong box at index " + str(i) + "!")

###############################################################################
# test_get_distance_from_box
###############################################################################

dist_list = [
    ("tiny_cube.pcd", 
     [
        [0.000000,1.000001,1.000001,1.414215,1.000001,1.414215,1.414215,1.732053],
        [1.000001,1.414215,1.414215,1.732053,0.000000,1.000001,1.000001,1.414215],
        [1.000001,1.414215,0.000000,1.000001,1.414215,1.732053,1.000001,1.414215],
        [1.414215,1.732053,1.000001,1.414215,1.000001,1.414215,0.000000,1.000001],
        [1.000001,0.000000,1.414215,1.000001,1.414215,1.000001,1.732053,1.414215],
        [1.414215,1.000001,1.732053,1.414215,1.000001,0.000000,1.414215,1.000001],
        [1.414215,1.000001,1.000001,0.000000,1.732053,1.414215,1.414215,1.000001],
        [1.732053,1.414215,1.414215,1.000001,1.414215,1.000001,1.000001,0.000000],
     ]
     ), 
    
    ("small_cube.pcd", 
    [
        [0.000000,3.000001,3.000001,4.242642,3.000001,4.242642,4.242642,5.196154],
        [0.000000,3.000001,3.000001,4.242642,1.000001,3.162279,3.162279,4.358901],
        [1.000001,3.162279,3.162279,4.358901,0.000000,3.000001,3.000001,4.242642],
        [3.000001,4.242642,4.242642,5.196154,0.000000,3.000001,3.000001,4.242642],
        [0.000000,3.000001,1.000001,3.162279,3.000001,4.242642,3.162279,4.358901],
        [0.000000,3.000001,1.000001,3.162279,1.000001,3.162279,1.414215,3.316626],
        [1.000001,3.162279,1.414215,3.316626,0.000000,3.000001,1.000001,3.162279],
        [3.000001,4.242642,3.162279,4.358901,0.000000,3.000001,1.000001,3.162279],
        [1.000001,3.162279,0.000000,3.000001,3.162279,4.358901,3.000001,4.242642],
        [1.000001,3.162279,0.000000,3.000001,1.414215,3.316626,1.000001,3.162279],
        [1.414215,3.316626,1.000001,3.162279,1.000001,3.162279,0.000000,3.000001],
        [3.162279,4.358901,3.000001,4.242642,1.000001,3.162279,0.000000,3.000001],
        [3.000001,4.242642,0.000000,3.000001,4.242642,5.196154,3.000001,4.242642],
        [3.000001,4.242642,0.000000,3.000001,3.162279,4.358901,1.000001,3.162279],
        [3.162279,4.358901,1.000001,3.162279,3.000001,4.242642,0.000000,3.000001],
        [4.242642,5.196154,3.000001,4.242642,3.000001,4.242642,0.000000,3.000001],
        [0.000000,1.000001,3.000001,3.162279,3.000001,3.162279,4.242642,4.358901],
        [0.000000,1.000001,3.000001,3.162279,1.000001,1.414215,3.162279,3.316626],
        [1.000001,1.414215,3.162279,3.316626,0.000000,1.000001,3.000001,3.162279],
        [3.000001,3.162279,4.242642,4.358901,0.000000,1.000001,3.000001,3.162279],
        [0.000000,1.000001,1.000001,1.414215,3.000001,3.162279,3.162279,3.316626],
        [0.000000,1.000001,1.000001,1.414215,1.000001,1.414215,1.414215,1.732053],
        [1.000001,1.414215,1.414215,1.732053,0.000000,1.000001,1.000001,1.414215],
        [3.000001,3.162279,3.162279,3.316626,0.000000,1.000001,1.000001,1.414215],
        [1.000001,1.414215,0.000000,1.000001,3.162279,3.316626,3.000001,3.162279],
        [1.000001,1.414215,0.000000,1.000001,1.414215,1.732053,1.000001,1.414215],
        [1.414215,1.732053,1.000001,1.414215,1.000001,1.414215,0.000000,1.000001],
        [3.162279,3.316626,3.000001,3.162279,1.000001,1.414215,0.000000,1.000001],
        [3.000001,3.162279,0.000000,1.000001,4.242642,4.358901,3.000001,3.162279],
        [3.000001,3.162279,0.000000,1.000001,3.162279,3.316626,1.000001,1.414215],
        [3.162279,3.316626,1.000001,1.414215,3.000001,3.162279,0.000000,1.000001],
        [4.242642,4.358901,3.000001,3.162279,3.000001,3.162279,0.000000,1.000001],
        [1.000001,0.000000,3.162279,3.000001,3.162279,3.000001,4.358901,4.242642],
        [1.000001,0.000000,3.162279,3.000001,1.414215,1.000001,3.316626,3.162279],
        [1.414215,1.000001,3.316626,3.162279,1.000001,0.000000,3.162279,3.000001],
        [3.162279,3.000001,4.358901,4.242642,1.000001,0.000000,3.162279,3.000001],
        [1.000001,0.000000,1.414215,1.000001,3.162279,3.000001,3.316626,3.162279],
        [1.000001,0.000000,1.414215,1.000001,1.414215,1.000001,1.732053,1.414215],
        [1.414215,1.000001,1.732053,1.414215,1.000001,0.000000,1.414215,1.000001],
        [3.162279,3.000001,3.316626,3.162279,1.000001,0.000000,1.414215,1.000001],
        [1.414215,1.000001,1.000001,0.000000,3.316626,3.162279,3.162279,3.000001],
        [1.414215,1.000001,1.000001,0.000000,1.732053,1.414215,1.414215,1.000001],
        [1.732053,1.414215,1.414215,1.000001,1.414215,1.000001,1.000001,0.000000],
        [3.316626,3.162279,3.162279,3.000001,1.414215,1.000001,1.000001,0.000000],
        [3.162279,3.000001,1.000001,0.000000,4.358901,4.242642,3.162279,3.000001],
        [3.162279,3.000001,1.000001,0.000000,3.316626,3.162279,1.414215,1.000001],
        [3.316626,3.162279,1.414215,1.000001,3.162279,3.000001,1.000001,0.000000],
        [4.358901,4.242642,3.162279,3.000001,3.162279,3.000001,1.000001,0.000000],
        [3.000001,0.000000,4.242642,3.000001,4.242642,3.000001,5.196154,4.242642],
        [3.000001,0.000000,4.242642,3.000001,3.162279,1.000001,4.358901,3.162279],
        [3.162279,1.000001,4.358901,3.162279,3.000001,0.000000,4.242642,3.000001],
        [4.242642,3.000001,5.196154,4.242642,3.000001,0.000000,4.242642,3.000001],
        [3.000001,0.000000,3.162279,1.000001,4.242642,3.000001,4.358901,3.162279],
        [3.000001,0.000000,3.162279,1.000001,3.162279,1.000001,3.316626,1.414215],
        [3.162279,1.000001,3.316626,1.414215,3.000001,0.000000,3.162279,1.000001],
        [4.242642,3.000001,4.358901,3.162279,3.000001,0.000000,3.162279,1.000001],
        [3.162279,1.000001,3.000001,0.000000,4.358901,3.162279,4.242642,3.000001],
        [3.162279,1.000001,3.000001,0.000000,3.316626,1.414215,3.162279,1.000001],
        [3.316626,1.414215,3.162279,1.000001,3.162279,1.000001,3.000001,0.000000],
        [4.358901,3.162279,4.242642,3.000001,3.162279,1.000001,3.000001,0.000000],
        [4.242642,3.000001,3.000001,0.000000,5.196154,4.242642,4.242642,3.000001],
        [4.242642,3.000001,3.000001,0.000000,4.358901,3.162279,3.162279,1.000001],
        [4.358901,3.162279,3.162279,1.000001,4.242642,3.000001,3.000001,0.000000],
        [5.196154,4.242642,4.242642,3.000001,4.242642,3.000001,3.000001,0.000000],
    ]
    ),  
    
    ("small_bunny.pcd", 
    [
        [1.347553,1.347244,0.382504,0.381412,1.292449,1.292126,0.028873,0.000000],
        [4.225798,3.888875,5.852334,5.613893,1.653488,0.000000,4.373382,4.048759],
        [4.313707,4.177904,5.834347,5.734668,1.073864,0.000000,4.072434,3.928299],
        [4.310991,2.669385,5.789583,4.696833,3.385119,0.000000,5.137475,3.864534],
        [4.627670,4.554930,5.770308,5.712137,0.817277,0.000000,3.542466,3.446900],
        [4.670818,4.513115,5.754984,5.627745,1.203465,0.000000,3.570942,3.362038],
        [1.584473,1.640836,1.009126,1.095500,1.221565,1.293834,0.000000,0.426364],
        [3.553833,0.407336,3.553776,0.406844,3.530468,0.020012,3.530411,0.000000],
        [4.751291,2.415220,5.504625,3.682312,4.091635,0.000000,4.946475,2.779592],
        [4.851369,4.745056,5.473495,5.379490,1.010064,0.000000,2.728294,2.534435],
        [4.904873,4.640807,5.523798,5.290714,1.587670,0.000000,2.995874,2.540584],
        [3.332641,4.580592,0.000000,3.142502,5.696864,6.506119,4.620363,5.587762],
        [3.452217,4.271925,4.123907,4.830957,0.000000,2.516255,2.255837,3.379400],
        [3.607670,3.983014,4.201715,4.528082,0.000000,1.687933,2.153863,2.736466],
        [3.455342,3.610066,4.077393,4.209314,0.000000,1.045559,2.164658,2.403942],
        [3.582453,3.472298,3.549306,3.438089,1.006736,0.486210,0.881543,0.000000],
        [2.788349,3.133698,2.731694,3.083395,0.559233,1.535551,0.000000,1.430096],
        [3.480356,3.435001,3.446226,3.400417,0.741648,0.486210,0.560037,0.000000],
        [2.815102,3.250108,2.759048,3.201680,0.558974,1.717806,0.000000,1.624317],
        [1.109858,2.017710,0.000000,1.685042,1.276145,2.113744,0.629889,1.798924],
        [3.593840,4.789669,4.016218,5.114220,0.000000,3.166266,1.792853,3.638621],
        [3.715009,4.563847,4.121014,4.900016,0.000000,2.650926,1.783666,3.195132],
        [3.496933,3.649870,3.931262,4.067902,0.000000,1.045469,1.796184,2.078288],
        [2.678958,5.528935,1.650966,5.110577,2.109770,5.276688,0.000000,4.836559],
        [3.039539,2.082465,2.765229,1.656609,2.548420,1.261867,2.214077,0.000000],
        [1.182969,0.773639,0.894929,0.000000,1.569470,1.289317,1.365547,1.031417],
        [4.671271,4.669968,4.778699,4.777425,0.110312,0.000000,1.013588,1.007568],
        [3.806548,1.069794,3.809761,1.081169,3.653129,0.000000,3.656476,0.156425],
        [0.000000,1.905462,0.156035,1.911840,1.610543,2.494922,1.618084,2.499796],
        [3.033335,5.742141,2.987939,5.718290,0.522819,4.903509,0.000000,4.875558],
        [3.761016,0.000000,3.909766,1.068189,3.784350,0.419595,3.932217,1.147645],
        [3.373791,4.670749,3.382854,4.677299,0.000000,3.230081,0.247461,3.239547],
        [3.348010,4.351536,3.348681,4.352052,0.000000,2.779693,0.067007,2.780501],
        [3.721593,3.688301,3.721939,3.688650,0.496676,0.000000,0.499262,0.050744],
        [3.765662,3.702215,3.765991,3.702549,0.688344,0.000000,0.690141,0.049772],
        [4.143439,3.451480,4.143930,3.452070,2.292459,0.000000,2.293347,0.063832],
        [3.761973,3.468222,3.755859,3.461589,1.473038,0.214396,1.457353,0.000000],
        [4.001025,4.000933,0.027101,0.000000,4.196352,4.196264,1.265661,1.265371],
        [4.216847,3.295024,5.935468,5.320260,2.631465,0.000000,4.936860,4.177078],
        [4.383028,4.394438,0.000000,0.316473,4.537688,4.548710,1.174597,1.216484],
        [3.709616,3.882387,0.000000,1.145284,3.717949,3.890349,0.248776,1.171991],
        [3.375180,4.224281,3.264745,4.136577,0.856317,2.680670,0.000000,2.540218],
        [4.243881,2.898176,4.245759,2.900927,3.100177,0.000000,3.102749,0.126295],
        [4.856489,2.148649,6.157299,4.352418,4.355317,0.000000,5.770238,3.785083],
        [4.787311,2.705275,6.042109,4.572445,3.949663,0.000000,5.402645,3.686290],
        [3.266872,3.527763,0.424256,1.397373,3.239207,3.502159,0.000000,1.331412],
        [4.540417,3.111944,5.535506,4.439666,3.306236,0.000000,4.577951,3.166455],
        [4.663006,3.937429,5.539670,4.944459,2.498054,0.000000,3.896742,2.990706],
        [4.335743,5.478846,3.658403,4.960142,2.326962,4.078461,0.000000,3.349492],
        [4.006582,4.921152,3.120877,4.231419,2.512535,3.804979,0.000000,2.857452],
        [4.484699,5.713178,4.032827,5.365777,1.961844,4.046814,0.000000,3.539474],
        [3.901474,4.052527,0.000000,1.096118,3.913197,4.063814,0.302670,1.137139],
        [3.838014,3.026283,3.797367,2.974564,2.425349,0.557095,2.360501,0.000000],
        [3.713735,3.967350,0.157469,1.404576,3.710395,3.964223,0.000000,1.395722],
        [3.343981,3.391020,0.000000,0.562858,3.344143,3.391180,0.033003,0.563825],
        [4.703532,3.740567,4.864579,3.941161,2.851557,0.000000,3.110030,1.241334],
        [4.460830,5.546710,4.335512,5.446434,1.049924,3.459671,0.000000,3.296511],
        [4.247481,0.495803,5.912384,4.142585,4.218444,0.000000,5.891559,4.112808],
        [4.058553,5.951193,4.029081,5.931133,0.488219,4.379863,0.000000,4.352568],
        [4.298126,0.332091,5.880155,4.026490,4.285278,0.000000,5.870770,4.012772],
        [4.141830,0.093453,5.771812,4.020920,4.140775,0.000000,5.771056,4.019834],
        [2.506905,4.043513,3.725895,4.893640,0.000000,3.172605,2.756396,4.202754],
        [0.903358,1.164581,0.000000,0.734979,1.042574,1.275599,0.520484,0.900610],
        [1.245611,1.149642,0.479446,0.000000,1.360304,1.273011,0.727151,0.546699],
        [2.514032,0.846792,2.367129,0.000000,2.559310,0.973021,2.415163,0.479284],
        [4.805964,0.404141,5.515128,2.735448,4.788942,0.000000,5.500301,2.705429],
        [4.075383,5.043082,0.000000,2.970510,5.862782,6.572378,4.214673,5.156297],
        [5.095767,1.321125,5.722659,2.920164,4.921531,0.000000,5.568075,2.604225],
        [3.536938,4.111892,0.000000,2.097075,3.561632,4.133152,0.418672,2.138459],
        [3.758551,0.407699,3.773664,0.529202,3.736373,0.000000,3.751576,0.337396],
        [2.259107,5.069598,2.238196,5.060314,0.306664,4.548769,0.000000,4.538420],
        [2.951601,5.738764,2.819692,5.672048,0.872516,4.998275,0.000000,4.921531],
        [3.866598,0.242686,3.945741,0.822912,3.858975,0.000000,3.938270,0.786313],
        [4.034689,0.492025,4.445769,1.930862,4.004576,0.000000,4.418458,1.867121],
        [2.957739,4.180761,0.000000,2.954749,3.803065,4.815999,2.390624,3.800740],
        [4.527844,5.655003,0.000000,3.387873,6.558729,7.382046,4.745056,5.830372],
        [3.134576,5.468851,1.155712,4.628006,2.913743,5.345341,0.000000,4.481380],
        [2.136240,2.129744,1.656088,1.647701,1.359633,1.349405,0.166459,0.000000],
        [1.655501,2.208115,1.009009,1.775722,1.312472,1.964096,0.000000,1.461194],
        [3.130366,5.825756,3.070144,5.793619,0.611069,4.951126,0.000000,4.913272],
        [2.409977,5.366092,1.653560,5.071609,1.753205,5.104967,0.000000,4.794472],
        [4.401769,0.840844,4.953315,2.422144,4.320712,0.000000,4.881425,2.271511],
        [4.763358,1.114567,5.281175,2.538404,4.631125,0.000000,5.162223,2.280621],
        [3.916894,5.148266,0.000000,3.341046,4.483118,5.591148,2.180893,3.989847],
        [4.299126,1.550803,4.769272,2.582335,4.009675,0.000000,4.510096,2.064816],
        [3.029839,4.454954,0.135437,3.268797,3.026810,4.452895,0.000000,3.265990],
        [3.396975,3.047630,3.237932,2.869288,1.818412,1.027245,1.500463,0.000000],
        [3.508643,4.937337,3.821504,5.164360,0.000000,3.473719,1.514372,3.789465],
        [3.363797,4.820118,3.850413,5.171468,0.000000,3.452305,1.873646,3.927971],
        [3.030376,4.340480,5.190715,6.049803,0.000000,3.107506,4.214303,5.236118],
        [3.798948,3.999519,5.647439,5.784265,0.000000,1.250660,4.178704,4.361848],
        [3.658003,3.656065,3.675423,3.673494,0.119060,0.000000,0.376726,0.357417],
        [3.051632,5.055374,3.369707,5.253500,0.000000,4.030427,1.429148,4.276308],
        [3.020548,4.862911,3.555130,5.211827,0.000000,3.811062,1.874896,4.247285],
        [2.850709,5.029129,3.231808,5.254538,0.000000,4.143138,1.522510,4.414027],
        [2.643530,5.009599,3.054438,5.238074,0.000000,4.255329,1.530143,4.522075],
        [3.818015,3.827935,3.882454,3.892209,0.000000,0.275400,0.704419,0.756341],
        [0.621047,4.389518,0.000000,4.345362,0.628923,4.390639,0.099219,4.346494],
        [0.665017,0.049623,0.663163,0.000000,1.925547,1.807746,1.924908,1.807065],
        [4.464547,4.491163,4.650957,4.676512,0.000000,0.488227,1.303543,1.391974],
        [0.000000,2.093626,1.178943,2.402743,1.742751,2.724051,2.104065,2.968225],
        [3.071475,5.722228,2.733053,5.547929,1.401564,5.027357,0.000000,4.828036],
        [0.000000,1.997774,4.422501,4.852795,0.937842,2.206955,4.520848,4.942587],
        [2.627351,4.636761,0.000000,3.820548,2.843439,4.762534,1.087279,3.972249],
        [0.000000,0.998629,3.323473,3.470264,1.047660,1.447360,3.484690,3.624958],
        [3.071805,5.727239,1.564600,5.080675,2.643484,5.509383,0.000000,4.833765],
        [1.201148,0.000000,1.231664,0.272471,2.128892,1.757676,2.146257,1.778669],
        [1.349134,4.421371,2.540904,4.917779,0.000000,4.210505,2.153144,4.729100],
        [1.016559,4.396035,2.297364,4.854854,0.000000,4.276883,2.060215,4.747233],
        [0.000000,2.221456,1.273816,2.560756,1.728083,2.814451,2.146830,3.089295],
        [0.683740,4.532492,1.908138,4.870008,0.000000,4.480623,1.781430,4.821771],
        [0.000000,1.059297,1.953084,2.221857,2.302030,2.534058,3.018920,3.199373],
        [0.994589,1.103719,0.000000,0.478529,1.044433,1.148838,0.318800,0.574999],
        [0.000000,3.926309,1.565696,4.226974,0.898140,4.027724,1.805010,4.321338],
        [0.018408,4.460365,1.437035,4.686106,0.000000,4.460327,1.436917,4.686070],
        [0.000000,4.415047,1.353331,4.617808,0.148465,4.417543,1.361451,4.620194],
        [0.000000,4.005481,1.118269,4.158655,0.818379,4.088230,1.385738,4.238414],
        [0.597828,4.664392,1.229936,4.786637,0.000000,4.625922,1.074870,4.749158],
        [0.000000,4.088976,1.024278,4.215313,0.734751,4.154465,1.260557,4.278870],
        [0.738978,0.000000,0.974334,0.635011,2.381198,2.263628,2.464415,2.351011],
        [0.000000,1.261244,0.611730,1.401767,1.808548,2.204900,1.909204,2.288187],
        [0.220033,0.686202,0.000000,0.649969,1.445426,1.584839,1.428580,1.569491],
        [0.000000,1.434200,4.474408,4.698644,2.310267,2.719239,5.035639,5.235894],
        [3.136401,0.000000,3.257834,0.881179,3.380241,1.260565,3.493209,1.538018],
        [0.215173,1.016462,0.000000,0.993426,1.440171,1.749568,1.424006,1.736286],
        [4.444992,0.451488,5.048921,2.436697,4.422003,0.000000,5.028694,2.394504],
        [4.151089,0.000000,5.038471,2.855635,4.152637,0.113355,5.039746,2.857884],
        [2.123370,0.000000,2.570881,1.449389,3.150508,2.327445,3.467914,2.741848],
        [2.828376,0.573035,2.769719,0.000000,2.861155,0.717541,2.803184,0.431852],
        [1.854864,0.000000,1.872849,0.258929,2.456435,1.610451,2.470044,1.631134],
        [1.049208,0.995950,0.330031,0.000000,1.241427,1.196754,0.741097,0.663554],
        [1.322307,1.297523,0.272112,0.095486,1.318854,1.294005,0.254809,0.000000],
        [1.958521,1.380247,1.389504,0.000000,1.959173,1.381172,1.390422,0.050534],
        [0.505000,0.000000,1.021340,0.887756,2.803417,2.757557,2.940622,2.896935],
        [0.488024,0.493063,0.000000,0.070312,1.386608,1.388390,1.297889,1.299792],
        [0.102843,0.000000,4.553517,4.552356,2.148716,2.146254,5.033977,5.032927],
        [2.143152,0.000000,2.201598,0.503918,2.797151,1.797485,2.842180,1.866785],
        [4.825352,4.816893,0.285593,0.000000,5.354400,5.346778,2.338190,2.320683],
        [0.681425,0.000000,4.243275,4.188203,2.203429,2.095414,4.732457,4.683141],
        [0.000000,0.219266,4.083288,4.089170,2.234517,2.245249,4.654708,4.659869],
        [0.000000,1.839103,0.525378,1.912674,1.722432,2.519736,1.800776,2.573925],
        [3.056812,0.000000,5.041931,4.009610,3.091205,0.459840,5.062857,4.035892],
        [2.218374,0.000000,4.501703,3.917161,2.868492,1.818534,4.855141,4.318705],
        [0.000000,2.269947,4.024694,4.620695,0.631272,2.356091,4.073900,4.663617],
        [0.162374,0.000000,3.404446,3.400572,2.754549,2.749759,4.376234,4.373221],
        [1.997637,3.547788,3.627847,4.664496,0.000000,2.931936,3.028320,4.215088],
        [0.160210,0.000000,2.931278,2.926897,2.994879,2.990591,4.187604,4.184538],
        [0.000000,2.981872,2.932391,4.182162,0.298166,2.996742,2.947511,4.192777],
        [0.030228,0.000000,2.556152,2.555973,3.099189,3.099041,4.017209,4.017095],
        [0.000000,2.855776,2.616478,3.873166,0.875650,2.987008,2.759116,3.970916],
        [2.533680,0.000000,3.507165,2.425010,3.302716,2.118584,4.097390,3.220104],
        [3.173540,4.381377,3.979820,4.996407,0.000000,3.020780,2.401586,3.859110],
        [3.910812,4.665825,6.097317,6.607023,0.000000,2.544695,4.677909,5.325251],
        [0.000000,1.958795,2.311865,3.030116,1.300209,2.351047,2.652407,3.297293],
        [0.000000,2.922456,2.319239,3.730900,1.245723,3.176881,2.632621,3.933376],
        [0.000000,2.804446,0.353076,2.826585,1.484947,3.173324,1.526346,3.192906],
        [0.000000,1.835673,1.363673,2.286766,1.756167,2.540437,2.223449,2.883301],
        [0.000000,0.345831,4.492019,4.505312,1.208043,1.256569,4.651624,4.664462],
        [0.000000,0.124602,4.484555,4.486285,1.005446,1.013138,4.595884,4.597573],
        [0.000000,1.574824,4.786187,5.038617,0.871340,1.799807,4.864856,5.113403],
        [2.910170,1.123931,5.579039,4.890788,2.684375,0.000000,5.464655,4.759893],
        [0.113589,0.702045,4.520298,4.573079,0.000000,0.692795,4.518870,4.571668],
        [1.302535,0.804337,4.904072,4.795861,1.024519,0.000000,4.837661,4.727930],
        [0.430779,0.780850,4.544207,4.590640,0.000000,0.651272,4.523743,4.570383],
        [2.096966,1.443637,5.218023,4.991451,1.520913,0.000000,5.014347,4.778127],
        [2.956778,1.651869,5.592505,5.026156,2.452319,0.000000,5.342980,4.746954],
        [0.897601,1.113371,4.627398,4.674047,0.000000,0.658716,4.539507,4.587050],
        [2.070892,1.652847,5.191587,5.039433,1.247674,0.000000,4.921451,4.760671],
        [2.370446,1.864526,5.321889,5.116634,1.463748,0.000000,4.984581,4.764818],
        [1.195745,2.714802,4.963091,5.529251,0.000000,2.437283,4.816893,5.398408],
        [0.019363,3.026661,3.028259,4.281431,0.000000,3.026599,3.028197,4.281387],
        [2.501809,2.746514,5.367085,5.485425,0.000000,1.133267,4.748321,4.881685],
        [2.613730,2.958840,5.447086,5.620845,0.000000,1.386775,4.779034,4.976174],
        [3.791494,5.941803,3.771344,5.928965,0.390378,4.591513,0.000000,4.574888],
        [2.127078,4.486045,3.162004,5.059487,0.000000,3.949701,2.339617,4.590637],
        [2.294580,4.189977,3.502578,4.955690,0.000000,3.505825,2.646310,4.392467],
        [2.587761,3.244944,0.000000,1.957845,2.595730,3.251303,0.203246,1.968366],
        [2.664154,3.089063,0.000000,1.563520,2.670308,3.094372,0.181192,1.573984],
        [2.065978,3.147991,0.023930,2.375322,2.065839,3.147900,0.000000,2.375201],
    ]
    ),
]

@pytest.mark.parametrize("filename, ground_dist", dist_list)    
def test_get_distance_from_box(filename, ground_dist):
    # Load cloud
    cloud = o3d.io.read_point_cloud(os.path.join(DATA_DIR, filename))
    
    # Get the AABB
    minP, maxP = A02.get_best_AABB(cloud, margin=np.array((0.1, 0.1, 0.1)))
    
    # Get the first split    
    boxes = A02.split_box_octree(np.array(minP), np.array(maxP))
        
    # Get the points
    points = np.asarray(cloud.points)
    
    # For each point...
    for pi in range(len(points)):
        p = points[pi]
        # For each box...
        print("[", end="")
        for bi in range(len(boxes)):
            if bi != 0:
                print(",", end="")
            box = boxes[bi]
            # Get distance
            dist = A02.get_distance_from_box(box[0], box[1], p)
            print(f"{dist:.6f}", end="")
            # Check distance
            np.testing.assert_allclose(np.array(dist), 
                                       np.array(ground_dist[pi][bi]), RTOL, ATOL,
                                        err_msg="Wrong distance at point " + str(pi) 
                                        + " and box " + str(bi) + "!")            
        
        print("],")     
    
    
###############################################################################
# test_get_indices_inside
###############################################################################

index_list = [
    ("tiny_cube.pcd", 
     [
        [0],
        [4],
        [2],
        [6],
        [1],
        [5],
        [3],
        [7],
     ]
    ),
    
    ("small_cube.pcd", 
     [
        [0, 1, 4, 5, 16, 17, 20, 21],
        [32, 33, 36, 37, 48, 49, 52, 53],
        [8, 9, 12, 13, 24, 25, 28, 29],
        [40, 41, 44, 45, 56, 57, 60, 61],
        [2, 3, 6, 7, 18, 19, 22, 23],
        [34, 35, 38, 39, 50, 51, 54, 55],
        [10, 11, 14, 15, 26, 27, 30, 31],
        [42, 43, 46, 47, 58, 59, 62, 63],
     ]
    ),
    
    ("small_bunny.pcd", 
     [
        [28, 100, 102, 104, 109, 111, 113, 115, 116, 118, 120, 122, 139, 140, 143, 147, 149, 153, 154, 155, 156, 157, 158, 159],
        [30, 106, 119, 123, 126, 127, 129, 133, 135, 136, 138, 141, 142, 144, 146, 148, 150],
        [11, 19, 39, 40, 51, 54, 62, 66, 68, 74, 75, 83, 97, 103, 112, 121, 124, 134, 176, 177],
        [25, 37, 63, 64, 98, 128, 130, 132, 137],
        [12, 13, 14, 20, 21, 22, 31, 32, 61, 87, 88, 89, 90, 92, 93, 94, 95, 96, 99, 107, 108, 110, 114, 117, 145, 151, 152, 161, 163, 166, 169, 170, 171, 172, 174, 175],
        [1, 2, 3, 4, 5, 8, 9, 10, 26, 27, 33, 34, 35, 38, 42, 43, 44, 46, 47, 55, 57, 59, 60, 65, 67, 69, 72, 73, 81, 82, 84, 91, 125, 160, 162, 164, 165, 167, 168],
        [6, 16, 18, 23, 29, 41, 45, 48, 49, 50, 53, 56, 58, 70, 71, 76, 78, 79, 80, 85, 101, 105, 173, 178],
        [0, 7, 15, 17, 24, 36, 52, 77, 86, 131],
     ]
    ),
]    

@pytest.mark.parametrize("filename, ground_indices", index_list)    
def test_get_indices_inside(filename, ground_indices):
    # Load cloud
    cloud = o3d.io.read_point_cloud(os.path.join(DATA_DIR, filename))
    
    # Get the AABB
    minP, maxP = A02.get_best_AABB(cloud, margin=np.array((0.1, 0.1, 0.1)))
    
    # Get the first split    
    boxes = A02.split_box_octree(np.array(minP), np.array(maxP))
        
    # Get the points
    points = np.asarray(cloud.points)
    
    # Get the whole list of points
    indices = np.array(list(range(len(points))), dtype=np.int32)
    
    # For each box...    
    for bi in range(len(boxes)):        
        box = boxes[bi]
        # Get updated indices
        inside_indices, indices = A02.get_indices_inside(points, indices, box[0], box[1])
        print(inside_indices, end="")
        # Check distance
        np.testing.assert_equal(np.array(inside_indices), 
                                np.array(ground_indices[bi]), 
                                err_msg="Wrong indices for box " + str(bi) + "!")            
        print(",")
    print("DONE:", indices)    
    

###############################################################################
# test_build_octree
###############################################################################

traverse_list = [
    ("tiny_cube.pcd", 0,
     [0, 1, 2, 3, 4, 5, 6, 7]     
    ),
    
    ("tiny_cube.pcd", 4,
     [[0], [4], [2], [6], [1], [5], [3], [7]]
    ),
    
    ("tiny_cube.pcd", 20,
     [[0], [4], [2], [6], [1], [5], [3], [7]]
    ),
    
    ("small_cube.pcd", 1, 
     [[0, 1, 4, 5, 16, 17, 20, 21], [32, 33, 36, 37, 48, 49, 52, 53], [8, 9, 12, 13, 24, 25, 28, 29], [40, 41, 44, 45, 56, 57, 60, 61], [2, 3, 6, 7, 18, 19, 22, 23], [34, 35, 38, 39, 50, 51, 54, 55], [10, 11, 14, 15, 26, 27, 30, 31], [42, 43, 46, 47, 58, 59, 62, 63]]
    ),
    
    ("small_cube.pcd", 4, 
     [[[0], [16], [4], [20], [1], [17], [5], [21]], [[32], [48], [36], [52], [33], [49], [37], [53]], [[8], [24], [12], [28], [9], [25], [13], [29]], [[40], [56], [44], [60], [41], [57], [45], [61]], [[2], [18], [6], [22], [3], [19], [7], [23]], [[34], [50], [38], [54], [35], [51], [39], [55]], [[10], [26], [14], [30], [11], [27], [15], [31]], [[42], [58], [46], [62], [43], [59], [47], [63]]]
    ),
    
    ("medium_cube.pcd", 4,
     [[[[[0], [], [], [], [1], [], [], []], [[], [80], [], [], [], [81], [], []], [[10], [], [], [], [11], [], [], []], [[], [90], [], [], [], [91], [], []], [2], [82], [12], [92]], [[], [[160], [], [], [], [161], [], [], []], [], [[170], [], [], [], [171], [], [], []], [], [162], [], [172]], [[[20], [], [], [], [21], [], [], []], [[], [100], [], [], [], [101], [], []], [[30], [], [], [], [31], [], [], []], [[], [110], [], [], [], [111], [], []], [22], [102], [32], [112]], [[], [[180], [], [], [], [181], [], [], []], [], [[190], [], [], [], [191], [], [], []], [], [182], [], [192]], [[3], [83], [13], [93], [4], [84], [14], [94]], [[], [163], [], [173], [], [164], [], [174]], [[23], [103], [33], [113], [24], [104], [34], [114]], [[], [183], [], [193], [], [184], [], [194]]], [[[[], [240], [], [], [], [241], [], []], [], [[], [250], [], [], [], [251], [], []], [], [242], [], [252], []], [[[320], [], [], [], [321], [], [], []], [[], [400], [], [], [], [401], [], []], [[330], [], [], [], [331], [], [], []], [[], [410], [], [], [], [411], [], []], [322], [402], [332], [412]], [[[], [260], [], [], [], [261], [], []], [], [[], [270], [], [], [], [271], [], []], [], [262], [], [272], []], [[[340], [], [], [], [341], [], [], []], [[], [420], [], [], [], [421], [], []], [[350], [], [], [], [351], [], [], []], [[], [430], [], [], [], [431], [], []], [342], [422], [352], [432]], [[243], [], [253], [], [244], [], [254], []], [[323], [403], [333], [413], [324], [404], [334], [414]], [[263], [], [273], [], [264], [], [274], []], [[343], [423], [353], [433], [344], [424], [354], [434]]], [[[[], [], [40], [], [], [], [41], []], [[], [], [], [120], [], [], [], [121]], [[], [], [50], [], [], [], [51], []], [[], [], [], [130], [], [], [], [131]], [42], [122], [52], [132]], [[], [[], [], [200], [], [], [], [201], []], [], [[], [], [210], [], [], [], [211], []], [], [202], [], [212]], [[[], [], [60], [], [], [], [61], []], [[], [], [], [140], [], [], [], [141]], [[], [], [70], [], [], [], [71], []], [[], [], [], [150], [], [], [], [151]], [62], [142], [72], [152]], [[], [[], [], [220], [], [], [], [221], []], [], [[], [], [230], [], [], [], [231], []], [], [222], [], [232]], [[43], [123], [53], [133], [44], [124], [54], [134]], [[], [203], [], [213], [], [204], [], [214]], [[63], [143], [73], [153], [64], [144], [74], [154]], [[], [223], [], [233], [], [224], [], [234]]], [[[[], [], [], [280], [], [], [], [281]], [], [[], [], [], [290], [], [], [], [291]], [], [282], [], [292], []], [[[], [], [360], [], [], [], [361], []], [[], [], [], [440], [], [], [], [441]], [[], [], [370], [], [], [], [371], []], [[], [], [], [450], [], [], [], [451]], [362], [442], [372], [452]], [[[], [], [], [300], [], [], [], [301]], [], [[], [], [], [310], [], [], [], [311]], [], [302], [], [312], []], [[[], [], [380], [], [], [], [381], []], [[], [], [], [460], [], [], [], [461]], [[], [], [390], [], [], [], [391], []], [[], [], [], [470], [], [], [], [471]], [382], [462], [392], [472]], [[283], [], [293], [], [284], [], [294], []], [[363], [443], [373], [453], [364], [444], [374], [454]], [[303], [], [313], [], [304], [], [314], []], [[383], [463], [393], [473], [384], [464], [394], [474]]], [[[5], [85], [15], [95], [6], [86], [16], [96]], [[], [165], [], [175], [], [166], [], [176]], [[25], [105], [35], [115], [26], [106], [36], [116]], [[], [185], [], [195], [], [186], [], [196]], [[7], [87], [17], [97], [[8], [], [], [], [9], [], [], []], [[], [88], [], [], [], [89], [], []], [[18], [], [], [], [19], [], [], []], [[], [98], [], [], [], [99], [], []]], [[], [167], [], [177], [], [[168], [], [], [], [169], [], [], []], [], [[178], [], [], [], [179], [], [], []]], [[27], [107], [37], [117], [[28], [], [], [], [29], [], [], []], [[], [108], [], [], [], [109], [], []], [[38], [], [], [], [39], [], [], []], [[], [118], [], [], [], [119], [], []]], [[], [187], [], [197], [], [[188], [], [], [], [189], [], [], []], [], [[198], [], [], [], [199], [], [], []]]], [[[245], [], [255], [], [246], [], [256], []], [[325], [405], [335], [415], [326], [406], [336], [416]], [[265], [], [275], [], [266], [], [276], []], [[345], [425], [355], [435], [346], [426], [356], [436]], [[247], [], [257], [], [[], [248], [], [], [], [249], [], []], [], [[], [258], [], [], [], [259], [], []], []], [[327], [407], [337], [417], [[328], [], [], [], [329], [], [], []], [[], [408], [], [], [], [409], [], []], [[338], [], [], [], [339], [], [], []], [[], [418], [], [], [], [419], [], []]], [[267], [], [277], [], [[], [268], [], [], [], [269], [], []], [], [[], [278], [], [], [], [279], [], []], []], [[347], [427], [357], [437], [[348], [], [], [], [349], [], [], []], [[], [428], [], [], [], [429], [], []], [[358], [], [], [], [359], [], [], []], [[], [438], [], [], [], [439], [], []]]], [[[45], [125], [55], [135], [46], [126], [56], [136]], [[], [205], [], [215], [], [206], [], [216]], [[65], [145], [75], [155], [66], [146], [76], [156]], [[], [225], [], [235], [], [226], [], [236]], [[47], [127], [57], [137], [[], [], [48], [], [], [], [49], []], [[], [], [], [128], [], [], [], [129]], [[], [], [58], [], [], [], [59], []], [[], [], [], [138], [], [], [], [139]]], [[], [207], [], [217], [], [[], [], [208], [], [], [], [209], []], [], [[], [], [218], [], [], [], [219], []]], [[67], [147], [77], [157], [[], [], [68], [], [], [], [69], []], [[], [], [], [148], [], [], [], [149]], [[], [], [78], [], [], [], [79], []], [[], [], [], [158], [], [], [], [159]]], [[], [227], [], [237], [], [[], [], [228], [], [], [], [229], []], [], [[], [], [238], [], [], [], [239], []]]], [[[285], [], [295], [], [286], [], [296], []], [[365], [445], [375], [455], [366], [446], [376], [456]], [[305], [], [315], [], [306], [], [316], []], [[385], [465], [395], [475], [386], [466], [396], [476]], [[287], [], [297], [], [[], [], [], [288], [], [], [], [289]], [], [[], [], [], [298], [], [], [], [299]], []], [[367], [447], [377], [457], [[], [], [368], [], [], [], [369], []], [[], [], [], [448], [], [], [], [449]], [[], [], [378], [], [], [], [379], []], [[], [], [], [458], [], [], [], [459]]], [[307], [], [317], [], [[], [], [], [308], [], [], [], [309]], [], [[], [], [], [318], [], [], [], [319]], []], [[387], [467], [397], [477], [[], [], [388], [], [], [], [389], []], [[], [], [], [468], [], [], [], [469]], [[], [], [398], [], [], [], [399], []], [[], [], [], [478], [], [], [], [479]]]]]
    ),
    
    ("bunny.pcd", 4,
     [[[], [1469], [], [[], [], [], [], [], [[], [], [], [], [1135, 1507], [1484, 1506, 1519, 1520], [], []], [], [85]], [[], [], [], [], [], [[], [1143, 1347, 1352], [], [], [1337], [1353, 1360, 1613], [1005], [1013]], [], [[], [], [], [1476, 1492], [], [], [1076, 1080, 1472, 1477, 1493], [1456]]], [[[], [1064, 1207, 1261, 1556, 1559], [], [1231], [], [997, 1010, 1563, 1564], [], [1023]], [[1222, 1246, 1554, 1555], [1333, 1341], [1372], [1357, 1369, 1370, 1371, 1379, 1388, 1395], [1574], [1560, 1561, 1565, 1568, 1575], [1033, 1038], []], [], [[], [1057], [1102], [], [1050, 1063], [], [1079, 1093], []], [[1004, 1359, 1590], [1584], [1373], [1029], [1597, 1607], [1592], [1390, 1391], []], [[], [1579, 1581], [], [], [], [1593, 1598, 1603], [], []], [[1433], [1412, 1429], [1462, 1471], [1446, 1447, 1461], [1048], [], [], []], [[1058, 1415, 1432, 1438], [], [1455], [], [], [], [], []]], [[], [[], [], [], [], [], [1515], [], [942, 1532, 1533, 1543, 1549, 1550]], [], [[], [], [], [], [], [337, 1067, 1335, 1336, 1361, 1384], [], [973, 1450, 1534]], [[], [], [], [1155], [], [1127, 1526], [], [1145, 1156, 1163]], [[1125, 1126, 1516, 1522, 1523], [1500], [], [], [1501], [], [], []], [[], [744, 1177, 1178, 1182], [], [1077], [], [683, 745], [], [751]], []], [[[], [], [], [], [1508, 1509], [1491, 1498, 1514, 1521], [144, 330, 990, 1110, 1538, 1539, 1548, 1553], [137, 817, 1552]], [[1119, 1120, 1136, 1137, 1142], [], [1168, 1171, 1181], [], [1103], [], [1547], []], [[], [], [], [], [872, 971, 1334], [353, 554, 1380], [684, 1085, 1448], [251, 1439]], [[], [1112, 1295, 1296], [], [], [1061, 1066, 1068, 1184], [], [1211, 1535], [630, 1232, 1239, 1252, 1272, 1285]], [1499], [], [], []]], [[[], [], [], [], [], [], [[], [], [], [], [1411, 1421, 1427, 1428], [1406, 1410, 1419, 1420, 1426], [1435, 1436, 1437, 1445, 1459, 1460, 1468, 1475], [1444, 1454, 1458, 1467]], [[], [], [], [], [], [], [1443, 1453, 1474], []]], [], [[], [], [], [], [[], [], [], [], [1483, 1505, 1513], [1502, 1512], [1525, 1530, 1531], [1267, 1524]], [[], [], [], [], [1482, 1490, 1497], [], [1541], []], [[], [], [], [], [1260, 1319], [808, 1251, 1258, 1259, 1264], [], []], []], [], [[[586, 1331, 1340, 1344, 1345], [1339], [1378, 1394, 1399, 1400], [1365], [1557, 1569, 1570], [1330, 1562], [], []], [[], [], [1364, 1387, 1398], [1393], [1332, 1338, 1349], [1558], [1355, 1356], [574, 1377, 1385, 1386]], [1405], [[], [1409, 1414], [1442, 1457, 1466], [1434, 1441, 1465, 1473], [], [1402], [], []], [[1571, 1576, 1582, 1583], [1572], [], [], [1594, 1595, 1599], [1586, 1587, 1591, 1596], [], []], [[1573, 1577, 1580], [555, 560, 1566, 1567], [], [], [1578], [556, 559], [], []], [], []], [[], [], [[613, 1425, 1430], [], [1288, 1481], [], [600, 601, 609], [], [625, 634, 657], []], [], [[], [], [571, 573, 585], [], [1348], [], [1367, 1375, 1383], [1374, 1382, 1392]], [1397], [[594, 599], [605, 617], [], [620, 638, 648, 649], [], [1407, 1413], [], [624, 1304]], [[], [], [], [], [1416], [593], [1265, 1282], []]], [[], [[], [1496, 1504, 1518], [], [1214, 1270], [], [], [], []], [[1212, 1217], [335, 1183, 1218, 1229, 1255, 1283, 1300], [], [], [], [], [414, 968, 1047, 1187], [328, 970, 1094, 1245, 1254]], [[1191, 1193, 1284], [], [], [], [1223, 1226], [862], [714, 966, 1240, 1286, 1323], [1138, 1221, 1250, 1279, 1358]], [], [], [], [1228]], [[[1489], [], [1529], [], [659, 690, 1292, 1495, 1517], [], [1216, 1249], [1540]], [], [1310], [], [[], [655, 656, 662, 663, 678, 679, 689], [], [435], [], [], [], [281, 566]], [[], [], [], [], [677, 682], [], [], []], [[], [1189, 1235], [1074, 1227, 1301], [], [], [282, 456, 488], [], [308, 1299]], [627]]], [[1788], [], [[], [[], [], [1027], [130, 152, 1404, 1781], [1036, 1071, 1403], [1790, 1793], [1007, 1117], [669]], [], [[], [611, 1087, 1132, 1278, 1510], [700, 706], [1322], [712, 1106], [631, 711], [709], []], [1161], [[1006, 1041, 1089, 1091], [1789], [162, 1037, 1059, 1069], [581], [941, 1114, 1115, 1124, 1166, 1176], [696], [161, 1082], []], [[], [1055, 1062], [], [], [], [64, 956], [], []], [[725], [], [], [], [773, 774, 783, 784], [], [], []]], [], [[], [], [], [[], [], [885], [1795], [], [], [1026, 1073, 1088], []], [[], [], [], [], [], [961], [], [991, 1342, 1424, 1449, 1452, 1503, 1542]], [[1479], [11, 329, 1192], [], [1269], [959, 1081], [], [873, 950, 1551], [750, 1351]], [[], [], [], [], [], [1536], [], [619, 1174]], [[], [], [1045, 1105, 1794], [1780, 1791], [127, 975, 977, 1086], [972, 1368, 1418, 1440], [987, 1044, 1478, 1785], [1237, 1238, 1263, 1544, 1787]]], [[[], [], [], [], [1196], [1078, 1121, 1173, 1206, 1291], [], []], [[], [], [], [], [1247], [1186, 1215], [], []], [], [], [[1190, 1236], [1092, 1144, 1200], [1256], [], [], [], [680, 1311, 1312, 1324], [179, 1313, 1321]], [[1154, 1197, 1201, 1277, 1289, 1297], [1153, 1328], [], [], [], [], [445, 595, 614, 1030], [1141, 1320]], [[], [], [], [], [1280, 1290, 1302], [], [1271, 1773], []], []], [[[], [], [], [905, 1009, 1101], [], [], [], [694, 1003]], [[1056, 1107], [697, 1792], [809], [604, 606], [788, 1096, 1116], [], [117, 833, 843, 852], [653]], [], [[810, 811, 820, 821, 834, 835], [], [], [], [], [], [], []], [[], [114, 979], [], [], [], [], [], []], [[652, 1016], [18, 49], [4, 135, 192], [71], [798, 851], [86, 107, 661, 715, 764], [717], []], [], []], [[], [1363], [], [[], [], [], [], [], [365, 1381, 1431, 1528, 1537], [], [549, 1133]], [[], [], [], [860, 951, 1389, 1422], [1346, 1401], [1463, 1464, 1470, 1480, 1775, 1776, 1777], [640, 672, 1208, 1350], [1204, 1366]], [[], [], [325, 1396], [1774, 1779, 1784], [519, 1149, 1786], [], [356, 425, 451, 457], [530]], [[], [818], [], [], [1100], [210, 1070], [], []], [[411, 424, 1199], [355, 373, 478, 525, 550], [466, 514], [500], [122, 163, 459, 461, 499, 545], [], [], []]]], [[], [], [], [], [[[], [], [], [], [1032, 1194, 1203, 1224], [1198], [], []], [[], [], [], [], [1134, 1185, 1188, 1275, 1309], [], [], []], [], [], [[], [], [1253], [232, 1244, 1268], [], [], [602, 1273, 1287, 1326], [1209, 1316, 1329]], [[1233], [1118, 1139, 1276, 1298], [1024], [], [], [], [1205, 1230, 1293, 1317, 1318], [618, 1097, 1241, 1242, 1243, 1327]], [], []], [[], [], [], [], [[1234], [], [], [], [998, 1060, 1152, 1274], [1257], [645], []], [], [], []], [[664], [], [[1376, 1527], [], [359, 381, 1202, 1210, 1220, 1362], [], [], [], [406], []], [], [], [], [344], []], []], [[[], [[874, 1354, 1644], [1618], [883, 1011], [1014, 1025, 1034, 1040], [878, 1652], [875, 1638, 1639, 1653, 1654], [889], [891, 897]], [[], [], [], [], [], [], [], [622, 1084, 1762, 1763, 1769]], [[], [1687], [], [1693], [], [], [1726, 1727], []], [], [[], [876], [], [], [], [1709], [], [1008]], [[], [], [], [621, 1606], [], [], [], [1602]], [[1752], [1730, 1753, 1766, 1771], [1764, 1765, 1770], [], [], [907], [1691, 1742, 1744], [1417, 1494, 1745]]], [[[1619], [1614, 1620], [], [], [1631, 1632, 1657, 1658], [1633], [], []], [[1615], [1608, 1623, 1624], [], [], [], [1634, 1640, 1641], [], []], [[], [], [], [], [909, 1046], [], [], []], [], [[], [], [892, 1017, 1020, 1035], [], [1701, 1710], [1694], [], []], [[1663, 1664], [1659, 1670, 1674, 1675], [], [], [1683, 1696], [1688], [], []], [[910, 930], [], [], [], [938], [], [952, 953], []], []], [[[], [1122, 1123], [], [1157, 1172], [], [1108, 1109], [1140, 1158, 1169], [1128, 1129, 1130, 1146]], [], [[], [], [], [1028], [733, 779, 1179], [], [419, 789, 840], [635, 651]], [], [[], [1095, 1104], [1164, 1170], [1131], [], [477, 691, 1725, 1735, 1767], [], [1147]], [], [[392, 807], [], [780], [187], [], [983], [984], [644]], []], [], [[], [[], [1737, 1738], [], [879, 1021, 1031], [], [870, 1754, 1755, 1756, 1772], [], [880, 881, 884]], [], [[], [], [1662, 1707], [576, 1682, 1698, 1746, 1749, 1750, 1759, 1768], [], [], [], [1713]], [], [[], [861, 867], [], [], [], [], [], []], [], []], [[[1711, 1731], [1702], [395, 906, 1042], [], [1747, 1757], [12, 354, 868], [28], [16, 29, 36]], [[1695, 1703, 1722], [], [], [], [1732, 1739, 1748], [1733, 1740], [900], []], [[46, 919, 931, 932, 945], [], [91, 98, 108, 1672, 1706, 1721], [], [], [65, 72], [967, 1697], [123, 131, 954]], [[66], [], [], [], [67, 77, 914, 920], [78, 933, 946, 955], [100, 101, 102, 115], [963, 985]], [[338, 339, 348, 1487, 1545], [334], [], [], [], [], [], []], [[], [1758], [886, 887, 890], [], [616, 864, 877], [340, 341, 1065, 1423], [882], [357]], [], [[], [], [], [], [], [], [], [974, 986]]], [[[], [1451, 1488], [], [865, 866, 915, 923, 924, 948, 958, 988], [], [], [], [929, 943]], [[944, 1686, 1699, 1724, 1751], [], [], [], [871, 894, 925, 1714], [105, 155, 181, 572, 1485, 1681, 1743], [227, 869, 937, 947], [182, 201]], [[], [888, 918, 936, 939], [], [898, 917, 994, 1700], [], [75, 922], [], []], [[], [], [1760], [], [228, 242, 252], [253], [291, 295, 296, 976, 1720], [277, 278, 302, 303, 310, 311]], [], [], [], [254]], [[[], [], [], [], [145, 146, 172, 184, 1729], [147, 156, 173, 174], [], [202]], [[], [], [], [], [138, 157, 175, 185], [], [211, 212], []], [[], [], [], [], [243], [229, 234, 235, 236, 262], [292], []], [[], [], [], [], [], [263, 964], [279, 283, 293, 297, 312], [280, 284, 287, 294]], [183], [[], [962, 980, 992, 993, 996], [896], [], [], [], [], [188, 204, 928, 935, 978]], [[255, 256], [], [], [], [], [], [], []], [[], [244, 901, 921, 960], [], [], [], [], [], []]]], [[[[], [1600, 1604, 1605], [], [], [1627, 1628, 1635, 1645], [1609, 1616, 1621], [], []], [[1588], [1589], [], [], [1610], [], [], []], [], [], [[1646, 1647, 1665], [1636], [], [], [1676], [], [], []], [[1629, 1642], [1630], [], [], [1648, 1649, 1655, 1660, 1661, 1666, 1671], [1650, 1651, 1667, 1668], [], []], [], []], [[[1343, 1585], [], [], [], [1601, 1611], [], [], []], [[], [], [563, 568, 569, 570], [], [557, 558, 1612], [], [], [567]], [], [[], [584, 591, 592, 608], [1248], [629, 1225, 1266, 1325], [], [583, 587, 588, 598, 607], [], [637]], [[1617, 1625], [1622, 1626, 1643], [], [], [], [1656], [], [1680]], [[], [], [561, 562, 1637], [579, 580], [], [], [364, 379], []], [[], [], [], [], [], [], [], [440, 455]], [[], [589, 590, 612], [], [623, 628, 632, 633, 636], [], [417], [113, 141], [433, 441, 442, 443, 853, 854]]], [], [[], [[676, 681], [1195, 1262], [670, 688, 693, 703], [], [671, 675, 766, 767, 768, 785], [747, 761, 777], [15, 699], []], [[], [], [], [10, 104, 643], [], [], [], [133, 197, 249]], [[596, 674], [], [], [], [60, 386, 470, 575, 603], [], [394, 666], []], [], [[800, 822, 829, 836], [], [654, 686, 687, 692, 702], [], [469, 475, 486, 845], [], [], []], [[], [], [], [], [], [513], [], [446, 522, 642]], [[2, 476, 668], [], [], [], [387, 610], [], [], []]], [[[1704, 1712, 1716, 1717], [1689, 1705], [], [], [], [1718], [], []], [[], [], [], [], [1690, 1723], [331, 1719], [], [345, 360, 376, 377, 384]], [], [], [[342], [333, 336, 343, 1734], [19, 20, 349], [17, 21, 31, 32, 37], [], [], [], []], [[1728], [], [23, 33, 34, 38, 374], [375, 383], [], [], [], []], [[44, 50, 56, 934, 940], [], [], [], [47], [48, 51, 57, 68, 69], [82, 93, 94], [83, 118, 119, 124, 125, 126]], [[393], [397, 407], [], [421, 422, 454, 463], [45, 58, 70, 415], [], [103, 120, 420], []]], [[[1677, 1678, 1679], [], [361], [41, 363, 1684], [], [], [346, 351, 352, 367, 378], []], [[], [], [369, 385], [], [], [], [], []], [[], [62, 388, 398, 402, 412, 413], [], [427, 439], [408, 409], [], [431, 437, 438], [449, 450, 464]], [[54, 74, 81], [], [89], [], [], [], [], []], [], [], [[416], [], [426, 448], [], [], [], [], []], []], [[], [], [[], [], [], [], [], [], [285, 304, 313, 916], [288, 305]], [[], [], [], [], [], [], [298, 299], [306, 307]], [[], [], [], [], [148, 164], [149, 150, 151, 159, 160, 176], [193, 194, 213], [189, 195, 205, 216, 217, 220]], [[], [468, 493, 494], [], [523, 528, 535, 548], [132], [483], [190, 206, 502, 515, 521, 527], []], [[], [90, 790, 795], [], [844], [237, 247, 257], [231, 238, 248, 264, 272], [], []], [[258, 265], [259, 260, 266, 267, 273], [], [289], [], [], [], []]], [[[], [479, 496], [], [510, 537], [], [495], [503, 529, 544], [524]], [], [[], [531, 552], [128, 368], [84, 526, 532, 533, 539], [472], [396], [6, 332, 370, 434, 489, 509, 516], []], [], [[473, 474, 485], [], [536], [], [], [], [], []], [], [[447, 511], [], [], [], [], [], [], []], []]], [[[[1180], [695, 816], [1039], [], [430, 639], [], [134, 658, 1051], []], [], [[1012, 1049], [1167, 1546], [], [626, 1043, 1111, 1175], [], [], [8, 647, 770, 793, 1052, 1150], []], [], [[471, 615, 832, 841], [], [39, 95], [], [667, 1408, 1511, 1685], [1741], [660, 665, 685, 758], []], [], [[650, 762, 1015, 1099], [], [224, 1098, 1148, 1159], [], [1019, 1022, 1053], [], [899, 1018], []], []], [[[], [], [], [0, 27, 1314, 1315], [], [], [], [737]], [[], [], [3, 9, 13, 30, 191, 223], [76, 1305], [], [], [24, 26, 746, 763], [7, 99, 207]], [[1281, 1303, 1306], [], [698, 1778, 1782, 1783, 1796], [404, 487, 551], [], [], [582, 641], []], [], [[], [], [], [261, 756, 757, 813, 846], [], [], [465], [274, 736, 759]], [[], [], [142, 723, 732, 823, 837, 856], [842], [], [], [726, 796], [80]], [[782], [143], [275], [], [578], [], [564, 701], []], []], [[[], [1072, 1075, 1151], [], [], [], [171, 705, 707], [], []], [[109, 199, 724, 728, 791, 850], [1213, 1219], [], [], [741, 748, 781], [129, 722, 742], [], []], [], [], [[1054, 1090, 1113], [215, 721, 730, 765], [], [], [1162], [760, 771, 814], [], []], [[239, 776], [208, 716, 731, 755, 819], [], [], [713, 752], [158, 286, 718, 799, 801], [], []], [], []], [[[], [399, 444], [], [458, 518], [290, 517], [382, 540], [326], [14]], [538], [908], [[321, 508], [], [], [], [], [], [], []], [[240, 597, 710, 775], [], [], [], [], [], [], []], [], [], []], [[[269, 735, 739, 1673], [1708, 1736, 1761], [673, 704], [], [787, 1692], [], [904], []], [[], [], [], [], [646], [467, 512], [], [366, 403]], [[999, 1000, 1001, 1002], [], [794, 1160, 1165], [], [895, 911, 1083], [], [927], [893, 995]], [[], [371], [], [423, 452, 491], [], [405, 410, 432], [180, 372, 380, 428], [401, 504]], [[913, 981, 1715], [565, 577, 903, 926], [957, 965], [902, 949, 982], [], [], [], []], [[482, 506, 1486, 1669], [347, 520], [553], [389, 541], [], [], [140, 268, 327], []], [[], [63, 863, 912, 969, 989], [], [61, 88, 221], [], [], [], []], [[169, 429, 453, 542, 543], [492], [418], [], [198], [], [], []]], [[[309, 480], [59, 166, 177], [391, 547], [], [314], [315, 316, 322], [350, 362, 497], []], [[110, 167, 250], [], [], [], [], [1, 317], [], []], [[390, 436, 534], [], [], [], [], [], [], []], [], [], [], [], []], [[740], [[276], [753, 797], [], [], [719], [], [], []], [], [], [], [], [], []], []], [[[[], [], [5, 1307], [], [], [], [], []], [[], [], [], [786, 792, 805, 806, 826], [], [], [], [825, 831, 859]], [[203, 241], [848, 849, 1294], [], [], [40, 73, 106, 136], [154], [], []], [[827, 1308], [], [], [], [226], [219], [], []], [[], [], [246, 708], [], [], [], [209], []], [[], [], [], [121, 225, 230, 270, 271], [], [], [], [720, 727, 729, 743, 812]], [[], [96, 218, 754, 772], [], [], [], [55, 97, 828], [], []], [[196], [], [], [], [734, 738], [], [], []]], [[[], [749], [769, 804], [], [], [824], [802, 803, 815, 838, 839], []], [], [], [], [[42, 43, 116], [92, 245, 830, 857], [112, 847, 858], [], [153, 170, 214], [25, 505], [301], []], [], [], []], [], [], [[[], [], [111, 139, 186, 222], [87, 200, 778], [22, 168, 178], [53, 165, 318, 319], [], [79]], [[462, 546], [507], [35, 400, 855], [300, 460, 490], [52, 320, 323], [233, 324], [], []], [], [], [], [], [], []], [[[358, 481, 484, 498, 501], [], [], [], [], [], [], []], [], [], [], [], [], [], []], [], []]]
    ),
    
    ("small_bunny.pcd", 2, 
     [[[], [], [], [], [147, 149], [102, 104, 122, 139, 143, 157, 158, 159], [113, 115, 116, 118, 154, 155], [28, 100, 109, 111, 120, 140, 153, 156]], [[144, 146, 148], [], [133], [], [135, 138, 142], [126, 141], [106, 119, 127, 129, 136], [30, 123, 150]], [[], [], [11, 66, 75], [], [97], [19, 62, 112, 121, 124, 134], [74, 83, 103], [39, 40, 51, 54, 68, 176, 177]], [[], [], [], [], [25, 63, 64, 98, 130, 132], [128], [37, 137], []], [[145, 170, 175], [161, 163, 166, 169], [107, 108, 110, 114, 117, 174], [], [61, 89, 152], [90, 171, 172], [12, 20, 21, 31, 32, 87, 88, 92, 93, 94, 95, 151], [13, 14, 22, 96, 99]], [[162, 164, 165, 167, 168], [8, 43, 57, 59, 60, 65, 67, 160], [], [27, 69, 72, 73, 81, 82, 84, 125], [1, 2, 4, 5, 9, 10, 47], [3, 38, 44, 46], [26, 33, 34, 35, 91], [42, 55]], [[23, 70, 80], [6, 78, 178], [76, 85, 105], [45, 53], [29, 41, 48, 50, 56, 58, 71, 79, 101, 173], [16, 18], [49], []], [[0, 24, 77, 131], [7], [], [], [15, 17, 36, 52, 86], [], [], []]]
    ),
    
    ("small_bunny.pcd", 4, 
     [[[], [], [], [], [[], [], [], [], [], [], [], [[], [], [], [149], [], [], [], [147]]], [[122], [139], [], [], [[102], [159], [143], [], [], [], [], []], [[], [157, 158], [], [], [], [], [], []], [], [104]], [[], [154], [], [155], [[], [], [], [113], [], [], [115], []], [], [[], [116, 118], [], [], [], [], [], []], []], [[[], [], [], [], [153], [], [109], [156]], [111], [[], [], [], [], [100], [], [28], [120, 140]], [], [], [], [], []]], [[[], [], [], [], [], [], [[], [], [148], [], [144], [], [146], []], []], [], [133], [], [[[135], [], [], [138], [], [], [], []], [142], [], [], [], [], [], []], [[], [], [], [], [141], [], [], [126]], [[], [127], [[], [119], [], [], [], [], [], [106]], [[], [], [], [], [], [], [129], [136]], [], [], [], []], [[150], [], [123], [], [], [], [30], []]], [[], [], [[], [11], [], [[], [], [75], [], [], [66], [], []], [], [], [], []], [], [97], [[], [[], [], [], [], [121, 124], [134], [], []], [], [], [19], [[], [], [], [], [], [], [62], [112]], [], []], [[], [74], [], [83], [103], [], [], []], [[], [], [], [], [[], [], [], [], [176], [177], [68], []], [54], [], [[], [], [], [39], [40, 51], [], [], []]]], [[], [], [], [], [[98], [], [], [], [[], [], [130], [25], [], [], [63], []], [64], [], [132]], [128], [[], [], [[], [], [137], [], [37], [], [], []], [], [], [], [], []], []], [[[], [], [], [170], [], [], [], [[], [], [], [], [], [], [175], [145]]], [[169], [[161, 163], [], [], [], [166], [], [], []], [], [], [], [], [], []], [[[], [], [114], [], [], [108], [110], []], [], [117], [], [[], [107], [], [], [], [174], [], []], [], [], []], [], [[], [89], [], [61], [], [152], [], []], [[172], [171], [], [], [], [90], [], []], [[[], [93], [], [94, 95], [], [], [], [92]], [[], [], [], [], [88], [12, 151], [20, 87], []], [], [[], [], [], [], [], [], [31], [32]], [], [21], [], []], [[13], [[], [], [], [], [14], [], [22], []], [], [], [], [99], [], [96]]], [[[162], [], [], [], [167], [[164], [165], [], [], [168], [], [], []], [], []], [[160], [[], [], [57, 59, 60], [], [], [], [], []], [], [65], [], [43], [], [[], [], [], [67], [], [], [8], []]], [], [[], [[73], [125], [], [], [81], [82], [], []], [[], [], [], [69], [], [], [], [27]], [72], [], [84], [], []], [[], [], [], [], [2], [1], [[], [], [], [], [], [4, 5], [], [9]], [[], [], [], [47], [], [], [10], []]], [[[], [], [], [3], [], [], [38], []], [], [46], [44], [], [], [], []], [[], [], [], [35], [], [], [[], [], [33, 91], [34], [26], [], [], []], []], [[], [], [42], [], [55], [], [], []]], [[[], [], [], [], [70], [], [[80], [], [23], [], [], [], [], []], []], [[], [6], [[], [], [178], [], [], [78], [], []], [], [], [], [], []], [[76], [85], [], [], [105], [], [], []], [[45], [], [53], [], [], [], [], []], [[[29], [], [71], [], [79], [], [], []], [41], [101], [], [[173], [58], [], [], [], [], [], []], [56], [], [[], [], [48, 50], [], [], [], [], []]], [[[], [16, 18], [], [], [], [], [], []], [], [], [], [], [], [], []], [49], []], [[[], [], [[0, 131], [], [], [], [], [], [], []], [], [], [], [77], [24]], [7], [], [], [[[], [], [], [], [17], [15], [], []], [[], [52], [86], [], [36], [], [], []], [], [], [], [], [], []], [], [], []]]
    ),   
]    
     
            
@pytest.mark.parametrize("filename, max_depth, ground_traversal", traverse_list)    
def test_build_octree(filename, max_depth, ground_traversal):
    # Load cloud
    cloud = o3d.io.read_point_cloud(os.path.join(DATA_DIR, filename))   
    
    # Build tree
    tree = A02.build_octree(cloud, margin=(0.1,0.1,0.1), max_depth=max_depth)
    
    # Get traversal
    travel_list = A02.traverse_octree(tree)
    print(travel_list)
        
    # Check traversal list  
    # (Cheating a little and comparing the strings)
    travel_str = str(travel_list)
    ground_str = str(ground_traversal)
    assert travel_str == ground_str
    
###############################################################################
# test_do_radius_search_octree
###############################################################################

search_list = [
    ("tiny_cube.pcd", 4, (-2,2,2), 0.1,
     []     
    ),
    
    ("tiny_cube.pcd", 4, (-2,2,2), 1.8,
     [3]     
    ),
    
    ("tiny_cube.pcd", 0, (-2,2,2), 4.0,
     [1, 2, 3, 7]
    ),
    
    ("tiny_cube.pcd", 4, (-2,2,2), 4.0,
     [2, 1, 3, 7]
    ),
    
    ("tiny_cube.pcd", 4, (-2,2,2), 20.0,
     [0, 4, 2, 6, 1, 5, 3, 7]
    ),
            
    ("small_cube.pcd", 4, (0.1,0.7,-1.2), 2.5,
        [21, 37, 24, 25, 40, 41, 45, 26, 42]     
    ),
    
    ("medium_cube.pcd", 4, (2, 6.2, 4.1), 2.4,
     [  242, 252, 322, 402, 332, 412, 262, 342, 422, 352, 432, 253, 323,
        403, 333, 413, 404, 334, 414, 263, 343, 423, 353, 433, 344, 424,
        251, 321, 401, 330, 331, 410, 411, 341, 420, 421, 351, 431]
    ),
    
    ("bunny.pcd", 4, (6.79621601, 5.66879749, 8.07549858), 1.7,
         [304, 313, 288, 305, 298, 299, 306, 307, 289, 368, 370, 434, 489, 509, 
          516, 121, 225, 270, 720, 727, 729, 743, 812, 96, 754, 97, 828, 196, 734, 
          738, 112, 153, 170, 214, 505, 301, 111, 139, 186, 222, 87, 200, 778, 22, 
          168, 178, 53, 165, 318, 319, 79, 462, 546, 507, 35, 400, 855, 300, 460, 
          490, 52, 320, 323, 233, 324, 358, 481, 484, 498, 501]
     ),    
    
    ("bunny.pcd", 4, (1.6524384, 9.39138317, 0.32055977), 1.7,
         [1027,  130,  152, 1404, 1781, 1036, 1071, 1403, 1790, 1793, 1007,
          1117,  669,  611, 1087, 1132, 1278, 1510,  700,  706, 1322,  712,
          1106,  631,  711,  709, 1041,  162, 1059, 1069,  581, 1055, 1062,
          64,  725]
     ),
        
    ("small_bunny.pcd", 4, (6.6524384, 9.39138317, 3.32055977), 1.7,
        [11, 75, 66]    
     ),   
]  
 
@pytest.mark.parametrize("filename, max_depth, query_point, radius, ground_indices", search_list)    
def test_do_radius_search_octree(filename, max_depth, query_point, radius, ground_indices):
    # Load cloud
    cloud = o3d.io.read_point_cloud(os.path.join(DATA_DIR, filename)) 
        
    # Build tree
    tree = A02.build_octree(cloud, margin=(0.1,0.1,0.1), max_depth=max_depth) 
    
    # Do radius search
    search_indices = A02.do_radius_search_octree(cloud, tree, np.array(query_point), radius)
    print(search_indices)
    
    # Check indices   
    np.testing.assert_equal(np.array(search_indices), 
                            np.array(ground_indices), 
                            err_msg="Wrong indices for search!")
         