import pytest
import numpy as np
import open3d as o3d
import os
import Assign02 as A02

DATA_DIR = os.path.join("data", "assign02")
RTOL = 1e-6
ATOL = 1e-6

###############################################################################
# test_get_best_AABB
###############################################################################

cloud_bounds_list = [
    ("tiny_cube.pcd", None, (-1,-1,-1), (1,1,1)),   
    ("tiny_cube.pcd", (0.2, 0.3, 0.1), (-1.2,-1.3,-1.1), (1.2,1.3,1.1)),   
    
    ("small_cube.pcd", None, (-3,-3,-3), (3,3,3)),    
    ("small_cube.pcd", (0.1, 0.2, 0.3), (-3.1,-3.2,-3.3), (3.1,3.2,3.3)),    
    
    ("medium_cube.pcd", None, (-3,5,2), (2,12,11)),     
    ("medium_cube.pcd", (0.8, 0.1, 0.3), (-3.8,4.9,1.7), (2.8,12.1,11.3)),  
       
    ("bunny.pcd", None, (0.007591, 0.025406, 0.01606), (9.983815,  9.916933, 10.0)),   
    ("bunny.pcd", (0.1, 0.2, 0.3), (-0.092409, -0.174594, -0.28394), (10.083815, 10.116933, 10.3)),
    
    ("small_bunny.pcd", None, (5.035992231, 0.04137140512, 3.233233154), (14.95716095, 9.68043232, 12.99154758)),  
    ("small_bunny.pcd", (0.1, 0.2, 0.3), (4.935992231, -0.15862859488, 2.9332331540000003), (15.05716095, 9.880432319999999, 13.291547580000001))     
]

@pytest.mark.parametrize("filename, margin, ground_minP, ground_maxP", cloud_bounds_list)    
def test_get_best_AABB(filename, margin, ground_minP, ground_maxP):
    # Load cloud
    cloud = o3d.io.read_point_cloud(os.path.join(DATA_DIR, filename))
    
    # Get the box
    if margin is None:
        minP, maxP = A02.get_best_AABB(cloud)
    else:
        minP, maxP = A02.get_best_AABB(cloud, np.array(margin))
     
    # Check minP
    np.testing.assert_allclose(minP, ground_minP, RTOL, ATOL, err_msg="Wrong minimum point!")
    
    # Check maxP
    np.testing.assert_allclose(maxP, ground_maxP, RTOL, ATOL, err_msg="Wrong maximum point!")

###############################################################################
# test_split_box_octree
###############################################################################

split_list = [
    ((-1.2,-1.3,-1.1), (1.2,1.3,1.1), 
    [
        [ [-1.2, -1.3, -1.1] , [0.0, 0.0, 0.0] ],
        [ [0.0, -1.3, -1.1] , [1.2, 0.0, 0.0] ],
        [ [-1.2, 0.0, -1.1] , [0.0, 1.3, 0.0] ],
        [ [0.0, 0.0, -1.1] , [1.2, 1.3, 0.0] ],
        [ [-1.2, -1.3, 0.0] , [0.0, 0.0, 1.1] ],
        [ [0.0, -1.3, 0.0] , [1.2, 0.0, 1.1] ],
        [ [-1.2, 0.0, 0.0] , [0.0, 1.3, 1.1] ],
        [ [0.0, 0.0, 0.0] , [1.2, 1.3, 1.1] ],
    ]), 
     
    ((-3.1,-3.2,-3.3), (3.1,3.2,3.3),    
    [
        [ [-3.1, -3.2, -3.3] , [0.0, 0.0, 0.0] ],
        [ [0.0, -3.2, -3.3] , [3.1, 0.0, 0.0] ],
        [ [-3.1, 0.0, -3.3] , [0.0, 3.2, 0.0] ],
        [ [0.0, 0.0, -3.3] , [3.1, 3.2, 0.0] ],
        [ [-3.1, -3.2, 0.0] , [0.0, 0.0, 3.3] ],
        [ [0.0, -3.2, 0.0] , [3.1, 0.0, 3.3] ],
        [ [-3.1, 0.0, 0.0] , [0.0, 3.2, 3.3] ],
        [ [0.0, 0.0, 0.0] , [3.1, 3.2, 3.3] ],
    ]),  
    
    ((-3.8,4.9,1.7), (2.8,12.1,11.3),  
    [
        [ [-3.8, 4.9, 1.7] , [-0.5, 8.5, 6.5] ],
        [ [-0.5, 4.9, 1.7] , [2.8, 8.5, 6.5] ],
        [ [-3.8, 8.5, 1.7] , [-0.5, 12.1, 6.5] ],
        [ [-0.5, 8.5, 1.7] , [2.8, 12.1, 6.5] ],
        [ [-3.8, 4.9, 6.5] , [-0.5, 8.5, 11.3] ],
        [ [-0.5, 4.9, 6.5] , [2.8, 8.5, 11.3] ],
        [ [-3.8, 8.5, 6.5] , [-0.5, 12.1, 11.3] ],
        [ [-0.5, 8.5, 6.5] , [2.8, 12.1, 11.3] ], 
    ]),   
       
    ((-0.092409, -0.174594, -0.28394), (10.083815, 10.116933, 10.3),
    [
        [ [-0.092409, -0.174594, -0.28394] , [4.995703, 4.9711695, 5.00803] ],
        [ [4.995703, -0.174594, -0.28394] , [10.083815, 4.9711695, 5.00803] ],
        [ [-0.092409, 4.9711695, -0.28394] , [4.995703, 10.116933, 5.00803] ],
        [ [4.995703, 4.9711695, -0.28394] , [10.083815, 10.116933, 5.00803] ],
        [ [-0.092409, -0.174594, 5.00803] , [4.995703, 4.9711695, 10.3] ],
        [ [4.995703, -0.174594, 5.00803] , [10.083815, 4.9711695, 10.3] ],
        [ [-0.092409, 4.9711695, 5.00803] , [4.995703, 10.116933, 10.3] ],
        [ [4.995703, 4.9711695, 5.00803] , [10.083815, 10.116933, 10.3] ],
    ]), 
]

@pytest.mark.parametrize("minP, maxP, ground_boxes", split_list)    
def test_split_box_octree(minP, maxP, ground_boxes):
    # Get boxes
    boxes = A02.split_box_octree(np.array(minP), np.array(maxP))
        
    # For each box...
    for i in range(len(boxes)):
        box = boxes[i]
        np.testing.assert_allclose(box, ground_boxes[i], RTOL, ATOL,
                                   err_msg="Wrong box at index " + str(i) + "!")

###############################################################################
# test_get_distance_from_box
###############################################################################

dist_list = [
    ("tiny_cube.pcd", 
     [
        [0.000000,1.000001,1.000001,1.414215,1.000001,1.414215,1.414215,1.732053],
        [1.000001,1.414215,1.414215,1.732053,0.000000,1.000001,1.000001,1.414215],
        [1.000001,1.414215,0.000000,1.000001,1.414215,1.732053,1.000001,1.414215],
        [1.414215,1.732053,1.000001,1.414215,1.000001,1.414215,0.000000,1.000001],
        [1.000001,0.000000,1.414215,1.000001,1.414215,1.000001,1.732053,1.414215],
        [1.414215,1.000001,1.732053,1.414215,1.000001,0.000000,1.414215,1.000001],
        [1.414215,1.000001,1.000001,0.000000,1.732053,1.414215,1.414215,1.000001],
        [1.732053,1.414215,1.414215,1.000001,1.414215,1.000001,1.000001,0.000000],
     ]
     ), 
    
    ("small_cube.pcd", 
    [
        [0.000000,3.000001,3.000001,4.242642,3.000001,4.242642,4.242642,5.196154],
        [0.000000,3.000001,3.000001,4.242642,1.000001,3.162279,3.162279,4.358901],
        [1.000001,3.162279,3.162279,4.358901,0.000000,3.000001,3.000001,4.242642],
        [3.000001,4.242642,4.242642,5.196154,0.000000,3.000001,3.000001,4.242642],
        [0.000000,3.000001,1.000001,3.162279,3.000001,4.242642,3.162279,4.358901],
        [0.000000,3.000001,1.000001,3.162279,1.000001,3.162279,1.414215,3.316626],
        [1.000001,3.162279,1.414215,3.316626,0.000000,3.000001,1.000001,3.162279],
        [3.000001,4.242642,3.162279,4.358901,0.000000,3.000001,1.000001,3.162279],
        [1.000001,3.162279,0.000000,3.000001,3.162279,4.358901,3.000001,4.242642],
        [1.000001,3.162279,0.000000,3.000001,1.414215,3.316626,1.000001,3.162279],
        [1.414215,3.316626,1.000001,3.162279,1.000001,3.162279,0.000000,3.000001],
        [3.162279,4.358901,3.000001,4.242642,1.000001,3.162279,0.000000,3.000001],
        [3.000001,4.242642,0.000000,3.000001,4.242642,5.196154,3.000001,4.242642],
        [3.000001,4.242642,0.000000,3.000001,3.162279,4.358901,1.000001,3.162279],
        [3.162279,4.358901,1.000001,3.162279,3.000001,4.242642,0.000000,3.000001],
        [4.242642,5.196154,3.000001,4.242642,3.000001,4.242642,0.000000,3.000001],
        [0.000000,1.000001,3.000001,3.162279,3.000001,3.162279,4.242642,4.358901],
        [0.000000,1.000001,3.000001,3.162279,1.000001,1.414215,3.162279,3.316626],
        [1.000001,1.414215,3.162279,3.316626,0.000000,1.000001,3.000001,3.162279],
        [3.000001,3.162279,4.242642,4.358901,0.000000,1.000001,3.000001,3.162279],
        [0.000000,1.000001,1.000001,1.414215,3.000001,3.162279,3.162279,3.316626],
        [0.000000,1.000001,1.000001,1.414215,1.000001,1.414215,1.414215,1.732053],
        [1.000001,1.414215,1.414215,1.732053,0.000000,1.000001,1.000001,1.414215],
        [3.000001,3.162279,3.162279,3.316626,0.000000,1.000001,1.000001,1.414215],
        [1.000001,1.414215,0.000000,1.000001,3.162279,3.316626,3.000001,3.162279],
        [1.000001,1.414215,0.000000,1.000001,1.414215,1.732053,1.000001,1.414215],
        [1.414215,1.732053,1.000001,1.414215,1.000001,1.414215,0.000000,1.000001],
        [3.162279,3.316626,3.000001,3.162279,1.000001,1.414215,0.000000,1.000001],
        [3.000001,3.162279,0.000000,1.000001,4.242642,4.358901,3.000001,3.162279],
        [3.000001,3.162279,0.000000,1.000001,3.162279,3.316626,1.000001,1.414215],
        [3.162279,3.316626,1.000001,1.414215,3.000001,3.162279,0.000000,1.000001],
        [4.242642,4.358901,3.000001,3.162279,3.000001,3.162279,0.000000,1.000001],
        [1.000001,0.000000,3.162279,3.000001,3.162279,3.000001,4.358901,4.242642],
        [1.000001,0.000000,3.162279,3.000001,1.414215,1.000001,3.316626,3.162279],
        [1.414215,1.000001,3.316626,3.162279,1.000001,0.000000,3.162279,3.000001],
        [3.162279,3.000001,4.358901,4.242642,1.000001,0.000000,3.162279,3.000001],
        [1.000001,0.000000,1.414215,1.000001,3.162279,3.000001,3.316626,3.162279],
        [1.000001,0.000000,1.414215,1.000001,1.414215,1.000001,1.732053,1.414215],
        [1.414215,1.000001,1.732053,1.414215,1.000001,0.000000,1.414215,1.000001],
        [3.162279,3.000001,3.316626,3.162279,1.000001,0.000000,1.414215,1.000001],
        [1.414215,1.000001,1.000001,0.000000,3.316626,3.162279,3.162279,3.000001],
        [1.414215,1.000001,1.000001,0.000000,1.732053,1.414215,1.414215,1.000001],
        [1.732053,1.414215,1.414215,1.000001,1.414215,1.000001,1.000001,0.000000],
        [3.316626,3.162279,3.162279,3.000001,1.414215,1.000001,1.000001,0.000000],
        [3.162279,3.000001,1.000001,0.000000,4.358901,4.242642,3.162279,3.000001],
        [3.162279,3.000001,1.000001,0.000000,3.316626,3.162279,1.414215,1.000001],
        [3.316626,3.162279,1.414215,1.000001,3.162279,3.000001,1.000001,0.000000],
        [4.358901,4.242642,3.162279,3.000001,3.162279,3.000001,1.000001,0.000000],
        [3.000001,0.000000,4.242642,3.000001,4.242642,3.000001,5.196154,4.242642],
        [3.000001,0.000000,4.242642,3.000001,3.162279,1.000001,4.358901,3.162279],
        [3.162279,1.000001,4.358901,3.162279,3.000001,0.000000,4.242642,3.000001],
        [4.242642,3.000001,5.196154,4.242642,3.000001,0.000000,4.242642,3.000001],
        [3.000001,0.000000,3.162279,1.000001,4.242642,3.000001,4.358901,3.162279],
        [3.000001,0.000000,3.162279,1.000001,3.162279,1.000001,3.316626,1.414215],
        [3.162279,1.000001,3.316626,1.414215,3.000001,0.000000,3.162279,1.000001],
        [4.242642,3.000001,4.358901,3.162279,3.000001,0.000000,3.162279,1.000001],
        [3.162279,1.000001,3.000001,0.000000,4.358901,3.162279,4.242642,3.000001],
        [3.162279,1.000001,3.000001,0.000000,3.316626,1.414215,3.162279,1.000001],
        [3.316626,1.414215,3.162279,1.000001,3.162279,1.000001,3.000001,0.000000],
        [4.358901,3.162279,4.242642,3.000001,3.162279,1.000001,3.000001,0.000000],
        [4.242642,3.000001,3.000001,0.000000,5.196154,4.242642,4.242642,3.000001],
        [4.242642,3.000001,3.000001,0.000000,4.358901,3.162279,3.162279,1.000001],
        [4.358901,3.162279,3.162279,1.000001,4.242642,3.000001,3.000001,0.000000],
        [5.196154,4.242642,4.242642,3.000001,4.242642,3.000001,3.000001,0.000000],
    ]
    ),  
    
    ("small_bunny.pcd", 
    [
        [3.699360,5.098646,0.000000,3.508693,3.945610,5.280034,1.372068,3.767426],
        [0.653101,2.964054,0.000000,2.891207,1.061305,3.079845,0.836556,3.009801],
        [1.102258,1.495580,0.000000,1.010835,1.104059,1.496908,0.063043,1.012799],
        [4.447998,4.112509,5.875149,5.625426,1.694686,0.000000,4.195789,3.838318],
        [4.589641,4.508155,5.738271,5.673307,0.861012,0.000000,3.550252,3.444263],
        [4.643967,4.435786,5.732537,5.565227,1.374857,0.000000,3.631223,3.360885],
        [3.033157,3.139341,4.535625,4.607311,0.000000,0.809581,3.372218,3.468036],
        [2.540844,3.459761,3.890748,4.544446,0.000000,2.348204,2.946530,3.767771],
        [1.844599,1.821442,1.193020,1.156892,1.436714,1.406858,0.291370,0.000000],
        [3.518348,1.782359,3.442712,1.627974,3.119050,0.725606,3.033475,0.000000],
        [4.833198,4.767235,5.413559,5.354750,0.795785,0.000000,2.565169,2.438610],
        [4.841964,4.725875,5.422081,5.318669,1.053906,0.000000,2.658019,2.440153],
        [3.460915,3.640850,4.177992,4.328219,0.000000,1.130425,2.340446,2.599144],
        [4.731886,4.714059,5.205963,5.189765,0.410362,0.000000,2.209005,2.170554],
        [4.943534,4.879157,5.359497,5.300175,0.795209,0.000000,2.217664,2.070188],
        [3.547065,4.725661,3.973228,5.053389,0.000000,3.122531,1.790216,3.599316],
        [3.251533,3.135497,3.115145,2.993827,1.268648,0.931848,0.860887,0.000000],
        [4.506856,5.912971,4.000587,5.536802,2.075345,4.354140,0.000000,3.827725],
        [4.625759,4.623193,4.733659,4.731152,0.154047,0.000000,1.016669,1.004931],
        [3.722755,4.271263,3.822269,4.358271,0.000000,2.093989,0.866509,2.266192],
        [4.595103,4.218589,4.672438,4.302697,1.821669,0.000000,2.008777,0.846585],
        [4.559171,3.952448,4.638536,4.043739,2.272487,0.000000,2.427792,0.854386],
        [2.987733,5.680939,2.941164,5.656586,0.525456,4.860310,0.000000,4.831823],
        [3.632657,3.601305,3.632425,3.601071,0.478002,0.041050,0.476236,0.000000],
        [0.000000,2.177253,1.364619,2.569555,1.774477,2.808772,2.238516,3.122720],
        [4.400385,4.402559,6.208898,6.210440,0.000000,0.138350,4.380300,4.382485],
        [3.379309,4.194128,3.242499,4.084700,0.951805,2.660247,0.000000,2.484146],
        [4.217130,3.118991,5.746976,4.997165,2.838323,0.000000,4.826969,3.904299],
        [4.244369,2.851401,4.246170,2.854081,3.143912,0.000000,3.146343,0.123658],
        [3.414285,4.366116,2.801183,3.905413,1.952105,3.349080,0.000000,2.721328],
        [4.001432,4.020404,0.000000,0.390112,4.126143,4.144544,1.006776,1.079715],
        [4.210633,5.300817,3.622201,4.846605,2.146878,3.870184,0.000000,3.220130],
        [4.797379,2.658500,6.048483,4.542788,3.993397,0.000000,5.432911,3.683653],
        [4.420546,5.627812,3.864392,5.202362,2.146554,4.091300,0.000000,3.482964],
        [3.734975,4.588488,2.764688,3.840271,2.511283,3.662066,0.000000,2.665367],
        [4.096551,4.159717,0.000000,0.722163,4.164803,4.226949,0.750902,1.041812],
        [3.527913,3.630335,0.000000,0.856248,3.538478,3.640603,0.273233,0.898786],
        [4.602410,3.773337,5.441096,4.760401,2.635168,0.000000,3.920135,2.902300],
        [4.600547,3.424303,5.391322,4.430256,3.072325,0.000000,4.164192,2.810927],
        [3.244083,4.067517,2.718439,3.662040,1.770357,3.025688,0.000000,2.453696],
        [4.687474,3.731803,4.788378,3.857786,2.836557,0.000000,3.000369,0.977833],
        [4.788323,4.090632,5.343094,4.727989,2.488930,0.000000,3.437352,2.370783],
        [1.540431,5.126298,1.449633,5.099748,0.521049,4.917061,0.000000,4.889376],
        [2.903806,3.748224,2.863691,3.717232,0.481007,2.418359,0.000000,2.370041],
        [4.414206,1.910265,4.871800,2.810396,3.979460,0.000000,4.481665,2.061363],
        [4.019738,2.349085,4.013892,2.339068,3.269107,0.216709,3.261916,0.000000],
        [4.580523,2.705495,4.879944,3.186278,3.696145,0.000000,4.061299,1.683052],
        [4.019051,5.040278,3.960271,4.993534,0.684851,3.117797,0.000000,3.041651],
        [4.919119,4.623898,5.146357,4.864945,1.678481,0.000000,2.259328,1.512370],
        [4.092222,0.780650,5.949538,4.388637,4.017071,0.000000,5.898100,4.318648],
        [2.807745,0.000000,4.874507,3.984644,3.023191,1.120828,5.001707,4.139281],
        [4.773084,0.360729,5.877581,3.448732,4.759433,0.000000,5.866501,3.429814],
        [3.036692,0.000000,4.705637,3.594651,3.267387,1.205950,4.857709,3.791548],
        [4.903076,0.610050,5.925982,3.383676,4.864977,0.000000,5.894498,3.328229],
        [2.875934,0.000000,4.544669,3.518952,3.302434,1.623292,4.825877,3.875319],
        [2.960462,0.000000,4.455003,3.329071,3.301097,1.460447,4.688279,3.635329],
        [1.310878,4.075429,2.872825,4.810804,0.000000,3.858849,2.556310,4.628762],
        [5.188745,1.521736,5.887102,3.170263,4.960584,0.000000,5.687028,2.781167],
        [0.057703,0.191594,0.000000,0.182699,1.753740,1.763231,1.752791,1.762287],
        [5.076274,1.188150,5.664382,2.779995,4.935266,0.000000,5.538369,2.513299],
        [3.316682,0.000000,4.249353,2.656431,3.560525,1.294976,4.442293,2.955264],
        [2.861953,4.120601,0.000000,2.964553,2.945509,4.179067,0.696596,3.045295],
        [2.414388,5.479177,2.024955,5.319075,1.314849,5.091261,0.000000,4.918548],
        [4.072723,0.445250,4.479215,1.916911,4.048311,0.000000,4.457030,1.864484],
        [2.208142,5.429851,2.028179,5.359189,0.873144,5.036842,0.000000,4.960584],
        [3.946767,0.029927,4.225945,1.510807,3.946653,0.000000,4.225839,1.510510],
        [4.176852,5.469527,3.112064,4.706864,2.785884,4.497864,0.000000,3.531237],
        [2.518292,5.410262,2.443357,5.375791,0.609754,4.827104,0.000000,4.788438],
        [3.297004,2.462289,3.086034,2.171690,2.480725,1.160444,2.192570,0.000000],
        [1.967322,2.632301,1.416544,2.250611,1.365195,2.218650,0.000000,1.748900],
        [2.221299,2.758460,1.969715,2.560216,1.026837,1.931146,0.000000,1.635521],
        [3.567398,5.588865,2.023264,4.754227,2.938151,5.209780,0.000000,4.302218],
        [3.167294,4.727724,0.678399,3.574892,3.093788,4.678798,0.000000,3.509933],
        [2.986618,4.735260,0.000000,3.674616,3.575637,5.127181,1.966036,4.167505],
        [2.861575,1.159034,2.660630,0.483427,2.820445,1.053403,2.616343,0.000000],
        [1.871008,2.440836,1.382104,2.089790,1.261135,2.011833,0.000000,1.567486],
        [2.605676,1.396209,2.260444,0.519097,2.553446,1.296124,2.200033,0.000000],
        [3.979760,3.845822,4.007811,3.874843,1.023789,0.000000,1.127922,0.473354],
        [4.946129,2.078927,5.546889,3.259712,4.488012,0.000000,5.142571,2.510733],
        [1.848204,2.048629,1.458757,1.705578,1.134850,1.438371,0.000000,0.883756],
        [4.010585,5.931503,3.231444,5.435086,2.375409,4.973982,0.000000,4.370118],
        [3.182825,5.003744,3.388126,5.136777,0.000000,3.860969,1.161475,4.031886],
        [4.345717,4.339966,5.413488,5.408872,0.223508,0.000000,3.235823,3.228095],
        [0.000000,2.820988,1.283580,3.099282,1.596070,3.241205,2.048174,3.486114],
        [0.446795,3.812296,0.000000,3.786023,0.630192,3.838113,0.444427,3.812019],
        [3.421271,3.462144,4.473635,4.504970,0.000000,0.530421,2.882415,2.930813],
        [0.000000,2.954984,0.260569,2.966450,1.446990,3.290244,1.470264,3.300546],
        [4.377381,4.378486,5.124425,5.125369,0.000000,0.098395,2.664258,2.666074],
        [1.402063,3.923101,0.000000,3.664006,1.551843,3.979090,0.665157,3.723892],
        [3.836294,6.035110,3.785916,6.003213,0.619667,4.699936,0.000000,4.658906],
        [0.000000,3.186880,4.282551,5.338206,0.261283,3.197573,4.290514,5.344597],
        [3.889273,5.110669,0.000000,3.315493,5.917137,6.782699,4.459379,5.556848],
        [0.000000,2.948310,4.137359,5.080381,0.254772,2.959298,4.145196,5.086765],
        [2.513930,5.471072,2.023405,5.263740,1.491869,5.083154,0.000000,4.859299],
        [1.316795,2.769402,4.289645,4.933223,0.000000,2.436316,4.082536,4.754234],
        [0.000000,1.693871,3.979700,4.325184,0.928797,1.931803,4.086647,4.423786],
        [0.486636,2.678765,3.824284,4.643717,0.000000,2.634192,3.793195,4.618148],
        [3.157741,4.637210,0.000000,3.395937,5.191954,6.203932,4.121293,5.340173],
        [1.354649,4.837904,0.368237,4.658953,1.303640,4.823870,0.000000,4.644378],
        [2.257547,4.231663,0.000000,3.579169,2.370856,4.293182,0.724182,3.651697],
        [2.629988,4.602298,0.000000,3.776813,2.864073,4.739961,1.134054,3.943399],
        [3.166228,4.849573,0.000000,3.673331,3.817542,5.297828,2.132750,4.247586],
        [4.005903,4.349728,0.000000,1.694956,4.057236,4.397049,0.643354,1.812948],
        [2.909005,5.043614,0.368758,4.136630,2.885538,5.030115,0.000000,4.120161],
        [2.889231,4.569833,0.000000,3.540582,4.568622,5.779967,3.539018,5.006033],
        [0.000000,0.965967,2.592219,2.766350,1.845354,2.082888,3.181970,3.325361],
        [1.386429,4.320630,2.710148,4.908214,0.000000,4.092146,2.328673,4.708330],
        [2.982147,4.811359,0.000000,3.775708,3.288613,5.007090,1.386280,4.022157],
        [2.500219,1.039472,2.273894,0.000000,2.517087,1.079414,2.292428,0.290917],
        [2.818313,5.524537,1.187346,4.897694,2.555993,5.395435,0.000000,4.751591],
        [0.000000,0.979537,1.404182,1.712081,2.185454,2.394933,2.597679,2.776226],
        [0.782713,0.000000,1.006248,0.632374,2.439386,2.310403,2.520020,2.395383],
        [0.543627,0.301266,0.452514,0.000000,1.678362,1.616209,1.651102,1.587882],
        [3.714780,4.115440,0.000000,1.771231,3.783951,4.177983,0.720204,1.912055],
        [0.482267,0.000000,0.742734,0.564864,2.127957,2.072588,2.201652,2.148183],
        [0.774111,0.000000,0.951869,0.553901,2.217738,2.078248,2.285863,2.150795],
        [0.000000,1.274883,4.166672,4.357348,2.232399,2.570784,4.727025,4.895926],
        [0.000000,0.537466,0.038258,0.538826,1.788349,1.867368,1.788758,1.867760],
        [3.180135,0.000000,3.299257,0.878541,3.438372,1.307340,3.548836,1.575110],
        [2.439296,3.653749,0.000000,2.720242,2.445689,3.658021,0.176722,2.725977],
        [1.338657,0.000000,1.423615,0.484435,2.279586,1.845131,2.330491,1.907665],
        [2.567554,0.900487,2.404466,0.000000,2.603557,0.998523,2.442873,0.431476],
        [1.210177,0.000000,1.298024,0.469402,2.224734,1.866793,2.273715,1.924903],
        [0.490661,0.491380,0.000000,0.026577,1.431387,1.431634,1.344664,1.344926],
        [1.420494,1.218630,0.729893,0.000000,1.513795,1.326210,0.898063,0.523234],
        [0.000000,2.610608,4.487911,5.191977,0.780969,2.724919,4.555355,5.250384],
        [2.186887,0.000000,2.243603,0.501281,2.860729,1.844261,2.904316,1.911172],
        [0.000000,2.034188,4.377793,4.827317,0.943672,2.242418,4.478346,4.918689],
        [4.830769,4.819530,0.329328,0.000000,5.379702,5.369612,2.390254,2.367458],
        [0.000000,2.097592,4.198007,4.692883,0.854547,2.264982,4.284100,4.770053],
        [2.262109,0.000000,4.521131,3.914524,2.931981,1.865309,4.890809,4.336228],
        [3.211455,3.929302,0.000000,2.264061,3.226750,3.941813,0.313801,2.285704],
        [0.656649,0.000000,3.463264,3.400442,2.801110,2.723055,4.405590,4.356379],
        [1.040858,0.000000,3.381652,3.217482,2.895490,2.701940,4.328516,4.201508],
        [0.463004,0.000000,3.246276,3.213089,2.845821,2.807904,4.292160,4.267114],
        [4.373652,4.377776,6.408073,6.410889,0.000000,0.189995,4.683436,4.687288],
        [0.847444,0.000000,3.232646,3.119590,2.930992,2.805807,4.280485,4.195759],
        [0.526108,0.000000,2.977051,2.930195,2.985564,2.938844,4.183257,4.150042],
        [0.823770,4.126578,0.000000,4.043520,0.930811,4.149272,0.433372,4.066677],
        [1.294055,0.000000,2.797386,2.480079,3.061502,2.774566,3.939998,3.721425],
        [0.000000,2.812041,2.613841,3.839237,0.922425,2.959467,2.771829,3.948494],
        [0.000000,3.196405,2.642416,4.147212,0.522037,3.238754,2.693489,4.179939],
        [2.577415,0.000000,3.537083,2.422373,3.366281,2.165359,4.147257,3.249103],
        [0.000000,0.055640,2.369066,2.369719,3.188419,3.188904,3.972214,3.972604],
        [3.126764,4.317343,3.941017,4.939070,0.000000,2.977045,2.398949,3.823317],
        [0.007412,0.000000,2.003787,2.003773,3.192364,3.192355,3.769124,3.769116],
        [0.000000,1.403304,2.020419,2.459950,1.529527,2.075744,2.534077,2.896689],
        [2.062794,0.000000,2.775136,1.856411,3.222207,2.475378,3.718720,3.094149],
        [0.000000,0.378204,1.823592,1.862398,3.184035,3.206418,3.669273,3.688713],
        [3.903268,3.930920,0.000000,0.465437,4.193693,4.219442,1.533479,1.602557],
        [0.519725,0.000000,1.721397,1.641065,3.171332,3.128455,3.570776,3.532751],
        [1.419960,0.000000,2.048328,1.476267,3.099995,2.755664,3.433560,3.126187],
        [0.000000,0.048466,4.712989,4.713238,1.545868,1.546628,4.960037,4.960274],
        [0.000000,0.451191,4.649373,4.671214,1.568914,1.632502,4.906950,4.927650],
        [1.103616,0.000000,4.597092,4.462654,1.145020,0.305126,4.607207,4.473073],
        [0.000000,1.462861,4.654427,4.878899,0.593261,1.578582,4.692084,4.914836],
        [0.657987,0.000000,4.527017,4.478944,0.702826,0.247017,4.533751,4.485750],
        [3.206626,0.817423,5.702685,4.786057,3.100689,0.000000,5.643796,4.715736],
        [1.421192,4.138582,2.901336,4.850342,0.000000,3.886910,2.529420,4.637460],
        [0.221627,1.416650,4.824624,5.023422,0.000000,1.399206,4.819530,5.018531],
        [0.995572,0.930586,4.624500,4.610947,0.353798,0.000000,4.529902,4.516065],
        [2.060874,1.606072,5.185180,5.021788,1.291409,0.000000,4.930175,4.758034],
        [0.495741,3.556102,4.789506,5.944701,0.000000,3.521378,4.763781,5.923995],
        [1.267449,1.222682,4.687962,4.676057,0.333882,0.000000,4.525708,4.513376],
        [2.361509,1.817751,5.315552,5.097311,1.507483,0.000000,4.995085,4.762181],
        [2.932605,1.975051,5.580837,5.142606,2.167798,0.000000,5.219666,4.748217],
        [1.636090,1.630551,4.809130,4.807249,0.134503,0.000000,4.524272,4.522272],
        [2.487103,2.102867,5.167167,4.993594,1.328017,0.000000,4.719911,4.529231],
        [3.754085,2.547233,5.826387,5.132448,2.757673,0.000000,5.240075,4.455741],
        [4.434083,2.410790,6.049058,4.768849,3.721450,0.000000,5.547900,4.114609],
        [3.093149,3.027794,5.422513,5.385500,0.632484,0.000000,4.498457,4.453771],
        [2.872450,2.949405,5.330742,5.372600,0.000000,0.669343,4.490639,4.540249],
        [1.908417,4.613752,2.755478,5.023675,0.000000,4.200554,1.987613,4.647070],
        [2.665312,3.946481,3.832642,4.812481,0.000000,2.910468,2.754135,4.007004],
        [3.051213,4.856093,3.051400,4.856211,0.000000,3.777795,0.033787,3.777946],
        [2.590398,3.220866,0.000000,1.914110,2.602436,3.230555,0.250021,1.930370],
        [2.406122,3.912698,0.000000,3.085415,2.741410,4.127362,1.313737,3.353459],
        [3.570677,4.632952,0.000000,2.952036,6.046148,6.728330,4.879157,5.702691],
        [3.215603,4.480427,0.000000,3.119956,5.534259,6.353121,4.504211,5.479237],
    ]
    ),
]

@pytest.mark.parametrize("filename, ground_dist", dist_list)    
def test_get_distance_from_box(filename, ground_dist):
    # Load cloud
    cloud = o3d.io.read_point_cloud(os.path.join(DATA_DIR, filename))
    
    # Get the AABB
    minP, maxP = A02.get_best_AABB(cloud, margin=np.array((0.1, 0.1, 0.1)))
    
    # Get the first split    
    boxes = A02.split_box_octree(np.array(minP), np.array(maxP))
        
    # Get the points
    points = np.asarray(cloud.points)
    
    # For each point...
    for pi in range(len(points)):
        p = points[pi]
        # For each box...
        print("[", end="")
        for bi in range(len(boxes)):
            if bi != 0:
                print(",", end="")
            box = boxes[bi]
            # Get distance
            dist = A02.get_distance_from_box(box[0], box[1], p)
            print(f"{dist:.6f}", end="")
            # Check distance
            np.testing.assert_allclose(np.array(dist), 
                                       np.array(ground_dist[pi][bi]), RTOL, ATOL,
                                        err_msg="Wrong distance at point " + str(pi) 
                                        + " and box " + str(bi) + "!")            
        
        print("],")      
    
###############################################################################
# test_get_indices_inside
###############################################################################

index_list = [
    ("tiny_cube.pcd", 
     [
        [0],
        [4],
        [2],
        [6],
        [1],
        [5],
        [3],
        [7],
     ]
    ),
    
    ("small_cube.pcd", 
     [
        [0, 1, 4, 5, 16, 17, 20, 21],
        [32, 33, 36, 37, 48, 49, 52, 53],
        [8, 9, 12, 13, 24, 25, 28, 29],
        [40, 41, 44, 45, 56, 57, 60, 61],
        [2, 3, 6, 7, 18, 19, 22, 23],
        [34, 35, 38, 39, 50, 51, 54, 55],
        [10, 11, 14, 15, 26, 27, 30, 31],
        [42, 43, 46, 47, 58, 59, 62, 63],
     ]
    ),
    
    ("small_bunny.pcd", 
     [
        [24, 83, 86, 90, 92, 95, 105, 110, 116, 117, 125, 127, 129, 140, 141, 143, 146, 148, 152, 153, 155],
        [50, 52, 54, 55, 60, 111, 114, 115, 118, 120, 122, 126, 130, 132, 133, 134, 136, 137, 139, 142, 145, 147, 150, 151, 154, 156],
        [0, 1, 2, 30, 35, 36, 58, 61, 73, 84, 88, 91, 97, 99, 100, 101, 102, 104, 107, 113, 119, 123, 131, 138, 149, 175, 176, 177, 178],
        [108, 112, 121, 124, 128],
        [6, 7, 12, 15, 19, 25, 56, 81, 85, 87, 94, 96, 106, 135, 144, 158, 159, 162, 171, 172, 173, 174],
        [3, 4, 5, 10, 11, 13, 14, 18, 20, 21, 27, 28, 32, 37, 38, 40, 41, 44, 46, 48, 49, 51, 53, 57, 59, 63, 65, 77, 78, 82, 157, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170],
        [17, 22, 26, 29, 31, 33, 34, 39, 42, 43, 47, 62, 64, 66, 67, 69, 70, 71, 72, 75, 79, 80, 89, 93, 98, 103, 109],
        [8, 9, 16, 23, 45, 68, 74, 76],
     ]
    ),
]    

@pytest.mark.parametrize("filename, ground_indices", index_list)    
def test_get_indices_inside(filename, ground_indices):
    # Load cloud
    cloud = o3d.io.read_point_cloud(os.path.join(DATA_DIR, filename))
    
    # Get the AABB
    minP, maxP = A02.get_best_AABB(cloud, margin=np.array((0.1, 0.1, 0.1)))
    
    # Get the first split    
    boxes = A02.split_box_octree(np.array(minP), np.array(maxP))
        
    # Get the points
    points = np.asarray(cloud.points)
    
    # Get the whole list of points
    indices = np.array(list(range(len(points))), dtype=np.int32)
    
    # For each box...    
    for bi in range(len(boxes)):        
        box = boxes[bi]
        # Get updated indices
        inside_indices, indices = A02.get_indices_inside(points, indices, box[0], box[1])
        print(inside_indices, end="")
        # Check distance
        np.testing.assert_equal(np.array(inside_indices), 
                                np.array(ground_indices[bi]), 
                                err_msg="Wrong indices for box " + str(bi) + "!")            
        print(",")
    print("DONE:", indices)  
        
###############################################################################
# test_build_octree
###############################################################################

traverse_list = [
    ("tiny_cube.pcd", 0,
     [0, 1, 2, 3, 4, 5, 6, 7]     
    ),
    
    ("tiny_cube.pcd", 4,
     [[0], [4], [2], [6], [1], [5], [3], [7]]
    ),
    
    ("tiny_cube.pcd", 20,
     [[0], [4], [2], [6], [1], [5], [3], [7]]
    ),
    
    ("small_cube.pcd", 1, 
     [[0, 1, 4, 5, 16, 17, 20, 21], [32, 33, 36, 37, 48, 49, 52, 53], [8, 9, 12, 13, 24, 25, 28, 29], [40, 41, 44, 45, 56, 57, 60, 61], [2, 3, 6, 7, 18, 19, 22, 23], [34, 35, 38, 39, 50, 51, 54, 55], [10, 11, 14, 15, 26, 27, 30, 31], [42, 43, 46, 47, 58, 59, 62, 63]]
    ),
    
    ("small_cube.pcd", 4, 
     [[[0], [16], [4], [20], [1], [17], [5], [21]], [[32], [48], [36], [52], [33], [49], [37], [53]], [[8], [24], [12], [28], [9], [25], [13], [29]], [[40], [56], [44], [60], [41], [57], [45], [61]], [[2], [18], [6], [22], [3], [19], [7], [23]], [[34], [50], [38], [54], [35], [51], [39], [55]], [[10], [26], [14], [30], [11], [27], [15], [31]], [[42], [58], [46], [62], [43], [59], [47], [63]]]
    ),
    
    ("medium_cube.pcd", 4,
     [[[[[0], [], [], [], [1], [], [], []], [[], [80], [], [], [], [81], [], []], [[10], [], [], [], [11], [], [], []], [[], [90], [], [], [], [91], [], []], [2], [82], [12], [92]], [[], [[160], [], [], [], [161], [], [], []], [], [[170], [], [], [], [171], [], [], []], [], [162], [], [172]], [[[20], [], [], [], [21], [], [], []], [[], [100], [], [], [], [101], [], []], [[30], [], [], [], [31], [], [], []], [[], [110], [], [], [], [111], [], []], [22], [102], [32], [112]], [[], [[180], [], [], [], [181], [], [], []], [], [[190], [], [], [], [191], [], [], []], [], [182], [], [192]], [[3], [83], [13], [93], [4], [84], [14], [94]], [[], [163], [], [173], [], [164], [], [174]], [[23], [103], [33], [113], [24], [104], [34], [114]], [[], [183], [], [193], [], [184], [], [194]]], [[[[], [240], [], [], [], [241], [], []], [], [[], [250], [], [], [], [251], [], []], [], [242], [], [252], []], [[[320], [], [], [], [321], [], [], []], [[], [400], [], [], [], [401], [], []], [[330], [], [], [], [331], [], [], []], [[], [410], [], [], [], [411], [], []], [322], [402], [332], [412]], [[[], [260], [], [], [], [261], [], []], [], [[], [270], [], [], [], [271], [], []], [], [262], [], [272], []], [[[340], [], [], [], [341], [], [], []], [[], [420], [], [], [], [421], [], []], [[350], [], [], [], [351], [], [], []], [[], [430], [], [], [], [431], [], []], [342], [422], [352], [432]], [[243], [], [253], [], [244], [], [254], []], [[323], [403], [333], [413], [324], [404], [334], [414]], [[263], [], [273], [], [264], [], [274], []], [[343], [423], [353], [433], [344], [424], [354], [434]]], [[[[], [], [40], [], [], [], [41], []], [[], [], [], [120], [], [], [], [121]], [[], [], [50], [], [], [], [51], []], [[], [], [], [130], [], [], [], [131]], [42], [122], [52], [132]], [[], [[], [], [200], [], [], [], [201], []], [], [[], [], [210], [], [], [], [211], []], [], [202], [], [212]], [[[], [], [60], [], [], [], [61], []], [[], [], [], [140], [], [], [], [141]], [[], [], [70], [], [], [], [71], []], [[], [], [], [150], [], [], [], [151]], [62], [142], [72], [152]], [[], [[], [], [220], [], [], [], [221], []], [], [[], [], [230], [], [], [], [231], []], [], [222], [], [232]], [[43], [123], [53], [133], [44], [124], [54], [134]], [[], [203], [], [213], [], [204], [], [214]], [[63], [143], [73], [153], [64], [144], [74], [154]], [[], [223], [], [233], [], [224], [], [234]]], [[[[], [], [], [280], [], [], [], [281]], [], [[], [], [], [290], [], [], [], [291]], [], [282], [], [292], []], [[[], [], [360], [], [], [], [361], []], [[], [], [], [440], [], [], [], [441]], [[], [], [370], [], [], [], [371], []], [[], [], [], [450], [], [], [], [451]], [362], [442], [372], [452]], [[[], [], [], [300], [], [], [], [301]], [], [[], [], [], [310], [], [], [], [311]], [], [302], [], [312], []], [[[], [], [380], [], [], [], [381], []], [[], [], [], [460], [], [], [], [461]], [[], [], [390], [], [], [], [391], []], [[], [], [], [470], [], [], [], [471]], [382], [462], [392], [472]], [[283], [], [293], [], [284], [], [294], []], [[363], [443], [373], [453], [364], [444], [374], [454]], [[303], [], [313], [], [304], [], [314], []], [[383], [463], [393], [473], [384], [464], [394], [474]]], [[[5], [85], [15], [95], [6], [86], [16], [96]], [[], [165], [], [175], [], [166], [], [176]], [[25], [105], [35], [115], [26], [106], [36], [116]], [[], [185], [], [195], [], [186], [], [196]], [[7], [87], [17], [97], [[8], [], [], [], [9], [], [], []], [[], [88], [], [], [], [89], [], []], [[18], [], [], [], [19], [], [], []], [[], [98], [], [], [], [99], [], []]], [[], [167], [], [177], [], [[168], [], [], [], [169], [], [], []], [], [[178], [], [], [], [179], [], [], []]], [[27], [107], [37], [117], [[28], [], [], [], [29], [], [], []], [[], [108], [], [], [], [109], [], []], [[38], [], [], [], [39], [], [], []], [[], [118], [], [], [], [119], [], []]], [[], [187], [], [197], [], [[188], [], [], [], [189], [], [], []], [], [[198], [], [], [], [199], [], [], []]]], [[[245], [], [255], [], [246], [], [256], []], [[325], [405], [335], [415], [326], [406], [336], [416]], [[265], [], [275], [], [266], [], [276], []], [[345], [425], [355], [435], [346], [426], [356], [436]], [[247], [], [257], [], [[], [248], [], [], [], [249], [], []], [], [[], [258], [], [], [], [259], [], []], []], [[327], [407], [337], [417], [[328], [], [], [], [329], [], [], []], [[], [408], [], [], [], [409], [], []], [[338], [], [], [], [339], [], [], []], [[], [418], [], [], [], [419], [], []]], [[267], [], [277], [], [[], [268], [], [], [], [269], [], []], [], [[], [278], [], [], [], [279], [], []], []], [[347], [427], [357], [437], [[348], [], [], [], [349], [], [], []], [[], [428], [], [], [], [429], [], []], [[358], [], [], [], [359], [], [], []], [[], [438], [], [], [], [439], [], []]]], [[[45], [125], [55], [135], [46], [126], [56], [136]], [[], [205], [], [215], [], [206], [], [216]], [[65], [145], [75], [155], [66], [146], [76], [156]], [[], [225], [], [235], [], [226], [], [236]], [[47], [127], [57], [137], [[], [], [48], [], [], [], [49], []], [[], [], [], [128], [], [], [], [129]], [[], [], [58], [], [], [], [59], []], [[], [], [], [138], [], [], [], [139]]], [[], [207], [], [217], [], [[], [], [208], [], [], [], [209], []], [], [[], [], [218], [], [], [], [219], []]], [[67], [147], [77], [157], [[], [], [68], [], [], [], [69], []], [[], [], [], [148], [], [], [], [149]], [[], [], [78], [], [], [], [79], []], [[], [], [], [158], [], [], [], [159]]], [[], [227], [], [237], [], [[], [], [228], [], [], [], [229], []], [], [[], [], [238], [], [], [], [239], []]]], [[[285], [], [295], [], [286], [], [296], []], [[365], [445], [375], [455], [366], [446], [376], [456]], [[305], [], [315], [], [306], [], [316], []], [[385], [465], [395], [475], [386], [466], [396], [476]], [[287], [], [297], [], [[], [], [], [288], [], [], [], [289]], [], [[], [], [], [298], [], [], [], [299]], []], [[367], [447], [377], [457], [[], [], [368], [], [], [], [369], []], [[], [], [], [448], [], [], [], [449]], [[], [], [378], [], [], [], [379], []], [[], [], [], [458], [], [], [], [459]]], [[307], [], [317], [], [[], [], [], [308], [], [], [], [309]], [], [[], [], [], [318], [], [], [], [319]], []], [[387], [467], [397], [477], [[], [], [388], [], [], [], [389], []], [[], [], [], [468], [], [], [], [469]], [[], [], [398], [], [], [], [399], []], [[], [], [], [478], [], [], [], [479]]]]]
    ),
    
    ("bunny.pcd", 4,
     [[[], [1469], [], [[], [], [], [], [], [[], [], [], [], [1135, 1507], [1484, 1506, 1519, 1520], [], []], [], [85]], [[], [], [], [], [], [[], [1143, 1347, 1352], [], [], [1337], [1353, 1360, 1613], [1005], [1013]], [], [[], [], [], [1476, 1492], [], [], [1076, 1080, 1472, 1477, 1493], [1456]]], [[[], [1064, 1207, 1261, 1556, 1559], [], [1231], [], [997, 1010, 1563, 1564], [], [1023]], [[1222, 1246, 1554, 1555], [1333, 1341], [1372], [1357, 1369, 1370, 1371, 1379, 1388, 1395], [1574], [1560, 1561, 1565, 1568, 1575], [1033, 1038], []], [], [[], [1057], [1102], [], [1050, 1063], [], [1079, 1093], []], [[1004, 1359, 1590], [1584], [1373], [1029], [1597, 1607], [1592], [1390, 1391], []], [[], [1579, 1581], [], [], [], [1593, 1598, 1603], [], []], [[1433], [1412, 1429], [1462, 1471], [1446, 1447, 1461], [1048], [], [], []], [[1058, 1415, 1432, 1438], [], [1455], [], [], [], [], []]], [[], [[], [], [], [], [], [1515], [], [942, 1532, 1533, 1543, 1549, 1550]], [], [[], [], [], [], [], [337, 1067, 1335, 1336, 1361, 1384], [], [973, 1450, 1534]], [[], [], [], [1155], [], [1127, 1526], [], [1145, 1156, 1163]], [[1125, 1126, 1516, 1522, 1523], [1500], [], [], [1501], [], [], []], [[], [744, 1177, 1178, 1182], [], [1077], [], [683, 745], [], [751]], []], [[[], [], [], [], [1508, 1509], [1491, 1498, 1514, 1521], [144, 330, 990, 1110, 1538, 1539, 1548, 1553], [137, 817, 1552]], [[1119, 1120, 1136, 1137, 1142], [], [1168, 1171, 1181], [], [1103], [], [1547], []], [[], [], [], [], [872, 971, 1334], [353, 554, 1380], [684, 1085, 1448], [251, 1439]], [[], [1112, 1295, 1296], [], [], [1061, 1066, 1068, 1184], [], [1211, 1535], [630, 1232, 1239, 1252, 1272, 1285]], [1499], [], [], []]], [[[], [], [], [], [], [], [[], [], [], [], [1411, 1421, 1427, 1428], [1406, 1410, 1419, 1420, 1426], [1435, 1436, 1437, 1445, 1459, 1460, 1468, 1475], [1444, 1454, 1458, 1467]], [[], [], [], [], [], [], [1443, 1453, 1474], []]], [], [[], [], [], [], [[], [], [], [], [1483, 1505, 1513], [1502, 1512], [1525, 1530, 1531], [1267, 1524]], [[], [], [], [], [1482, 1490, 1497], [], [1541], []], [[], [], [], [], [1260, 1319], [808, 1251, 1258, 1259, 1264], [], []], []], [], [[[586, 1331, 1340, 1344, 1345], [1339], [1378, 1394, 1399, 1400], [1365], [1557, 1569, 1570], [1330, 1562], [], []], [[], [], [1364, 1387, 1398], [1393], [1332, 1338, 1349], [1558], [1355, 1356], [574, 1377, 1385, 1386]], [1405], [[], [1409, 1414], [1442, 1457, 1466], [1434, 1441, 1465, 1473], [], [1402], [], []], [[1571, 1576, 1582, 1583], [1572], [], [], [1594, 1595, 1599], [1586, 1587, 1591, 1596], [], []], [[1573, 1577, 1580], [555, 560, 1566, 1567], [], [], [1578], [556, 559], [], []], [], []], [[], [], [[613, 1425, 1430], [], [1288, 1481], [], [600, 601, 609], [], [625, 634, 657], []], [], [[], [], [571, 573, 585], [], [1348], [], [1367, 1375, 1383], [1374, 1382, 1392]], [1397], [[594, 599], [605, 617], [], [620, 638, 648, 649], [], [1407, 1413], [], [624, 1304]], [[], [], [], [], [1416], [593], [1265, 1282], []]], [[], [[], [1496, 1504, 1518], [], [1214, 1270], [], [], [], []], [[1212, 1217], [335, 1183, 1218, 1229, 1255, 1283, 1300], [], [], [], [], [414, 968, 1047, 1187], [328, 970, 1094, 1245, 1254]], [[1191, 1193, 1284], [], [], [], [1223, 1226], [862], [714, 966, 1240, 1286, 1323], [1138, 1221, 1250, 1279, 1358]], [], [], [], [1228]], [[[1489], [], [1529], [], [659, 690, 1292, 1495, 1517], [], [1216, 1249], [1540]], [], [1310], [], [[], [655, 656, 662, 663, 678, 679, 689], [], [435], [], [], [], [281, 566]], [[], [], [], [], [677, 682], [], [], []], [[], [1189, 1235], [1074, 1227, 1301], [], [], [282, 456, 488], [], [308, 1299]], [627]]], [[1788], [], [[], [[], [], [1027], [130, 152, 1404, 1781], [1036, 1071, 1403], [1790, 1793], [1007, 1117], [669]], [], [[], [611, 1087, 1132, 1278, 1510], [700, 706], [1322], [712, 1106], [631, 711], [709], []], [1161], [[1006, 1041, 1089, 1091], [1789], [162, 1037, 1059, 1069], [581], [941, 1114, 1115, 1124, 1166, 1176], [696], [161, 1082], []], [[], [1055, 1062], [], [], [], [64, 956], [], []], [[725], [], [], [], [773, 774, 783, 784], [], [], []]], [], [[], [], [], [[], [], [885], [1795], [], [], [1026, 1073, 1088], []], [[], [], [], [], [], [961], [], [991, 1342, 1424, 1449, 1452, 1503, 1542]], [[1479], [11, 329, 1192], [], [1269], [959, 1081], [], [873, 950, 1551], [750, 1351]], [[], [], [], [], [], [1536], [], [619, 1174]], [[], [], [1045, 1105, 1794], [1780, 1791], [127, 975, 977, 1086], [972, 1368, 1418, 1440], [987, 1044, 1478, 1785], [1237, 1238, 1263, 1544, 1787]]], [[[], [], [], [], [1196], [1078, 1121, 1173, 1206, 1291], [], []], [[], [], [], [], [1247], [1186, 1215], [], []], [], [], [[1190, 1236], [1092, 1144, 1200], [1256], [], [], [], [680, 1311, 1312, 1324], [179, 1313, 1321]], [[1154, 1197, 1201, 1277, 1289, 1297], [1153, 1328], [], [], [], [], [445, 595, 614, 1030], [1141, 1320]], [[], [], [], [], [1280, 1290, 1302], [], [1271, 1773], []], []], [[[], [], [], [905, 1009, 1101], [], [], [], [694, 1003]], [[1056, 1107], [697, 1792], [809], [604, 606], [788, 1096, 1116], [], [117, 833, 843, 852], [653]], [], [[810, 811, 820, 821, 834, 835], [], [], [], [], [], [], []], [[], [114, 979], [], [], [], [], [], []], [[652, 1016], [18, 49], [4, 135, 192], [71], [798, 851], [86, 107, 661, 715, 764], [717], []], [], []], [[], [1363], [], [[], [], [], [], [], [365, 1381, 1431, 1528, 1537], [], [549, 1133]], [[], [], [], [860, 951, 1389, 1422], [1346, 1401], [1463, 1464, 1470, 1480, 1775, 1776, 1777], [640, 672, 1208, 1350], [1204, 1366]], [[], [], [325, 1396], [1774, 1779, 1784], [519, 1149, 1786], [], [356, 425, 451, 457], [530]], [[], [818], [], [], [1100], [210, 1070], [], []], [[411, 424, 1199], [355, 373, 478, 525, 550], [466, 514], [500], [122, 163, 459, 461, 499, 545], [], [], []]]], [[], [], [], [], [[[], [], [], [], [1032, 1194, 1203, 1224], [1198], [], []], [[], [], [], [], [1134, 1185, 1188, 1275, 1309], [], [], []], [], [], [[], [], [1253], [232, 1244, 1268], [], [], [602, 1273, 1287, 1326], [1209, 1316, 1329]], [[1233], [1118, 1139, 1276, 1298], [1024], [], [], [], [1205, 1230, 1293, 1317, 1318], [618, 1097, 1241, 1242, 1243, 1327]], [], []], [[], [], [], [], [[1234], [], [], [], [998, 1060, 1152, 1274], [1257], [645], []], [], [], []], [[664], [], [[1376, 1527], [], [359, 381, 1202, 1210, 1220, 1362], [], [], [], [406], []], [], [], [], [344], []], []], [[[], [[874, 1354, 1644], [1618], [883, 1011], [1014, 1025, 1034, 1040], [878, 1652], [875, 1638, 1639, 1653, 1654], [889], [891, 897]], [[], [], [], [], [], [], [], [622, 1084, 1762, 1763, 1769]], [[], [1687], [], [1693], [], [], [1726, 1727], []], [], [[], [876], [], [], [], [1709], [], [1008]], [[], [], [], [621, 1606], [], [], [], [1602]], [[1752], [1730, 1753, 1766, 1771], [1764, 1765, 1770], [], [], [907], [1691, 1742, 1744], [1417, 1494, 1745]]], [[[1619], [1614, 1620], [], [], [1631, 1632, 1657, 1658], [1633], [], []], [[1615], [1608, 1623, 1624], [], [], [], [1634, 1640, 1641], [], []], [[], [], [], [], [909, 1046], [], [], []], [], [[], [], [892, 1017, 1020, 1035], [], [1701, 1710], [1694], [], []], [[1663, 1664], [1659, 1670, 1674, 1675], [], [], [1683, 1696], [1688], [], []], [[910, 930], [], [], [], [938], [], [952, 953], []], []], [[[], [1122, 1123], [], [1157, 1172], [], [1108, 1109], [1140, 1158, 1169], [1128, 1129, 1130, 1146]], [], [[], [], [], [1028], [733, 779, 1179], [], [419, 789, 840], [635, 651]], [], [[], [1095, 1104], [1164, 1170], [1131], [], [477, 691, 1725, 1735, 1767], [], [1147]], [], [[392, 807], [], [780], [187], [], [983], [984], [644]], []], [], [[], [[], [1737, 1738], [], [879, 1021, 1031], [], [870, 1754, 1755, 1756, 1772], [], [880, 881, 884]], [], [[], [], [1662, 1707], [576, 1682, 1698, 1746, 1749, 1750, 1759, 1768], [], [], [], [1713]], [], [[], [861, 867], [], [], [], [], [], []], [], []], [[[1711, 1731], [1702], [395, 906, 1042], [], [1747, 1757], [12, 354, 868], [28], [16, 29, 36]], [[1695, 1703, 1722], [], [], [], [1732, 1739, 1748], [1733, 1740], [900], []], [[46, 919, 931, 932, 945], [], [91, 98, 108, 1672, 1706, 1721], [], [], [65, 72], [967, 1697], [123, 131, 954]], [[66], [], [], [], [67, 77, 914, 920], [78, 933, 946, 955], [100, 101, 102, 115], [963, 985]], [[338, 339, 348, 1487, 1545], [334], [], [], [], [], [], []], [[], [1758], [886, 887, 890], [], [616, 864, 877], [340, 341, 1065, 1423], [882], [357]], [], [[], [], [], [], [], [], [], [974, 986]]], [[[], [1451, 1488], [], [865, 866, 915, 923, 924, 948, 958, 988], [], [], [], [929, 943]], [[944, 1686, 1699, 1724, 1751], [], [], [], [871, 894, 925, 1714], [105, 155, 181, 572, 1485, 1681, 1743], [227, 869, 937, 947], [182, 201]], [[], [888, 918, 936, 939], [], [898, 917, 994, 1700], [], [75, 922], [], []], [[], [], [1760], [], [228, 242, 252], [253], [291, 295, 296, 976, 1720], [277, 278, 302, 303, 310, 311]], [], [], [], [254]], [[[], [], [], [], [145, 146, 172, 184, 1729], [147, 156, 173, 174], [], [202]], [[], [], [], [], [138, 157, 175, 185], [], [211, 212], []], [[], [], [], [], [243], [229, 234, 235, 236, 262], [292], []], [[], [], [], [], [], [263, 964], [279, 283, 293, 297, 312], [280, 284, 287, 294]], [183], [[], [962, 980, 992, 993, 996], [896], [], [], [], [], [188, 204, 928, 935, 978]], [[255, 256], [], [], [], [], [], [], []], [[], [244, 901, 921, 960], [], [], [], [], [], []]]], [[[[], [1600, 1604, 1605], [], [], [1627, 1628, 1635, 1645], [1609, 1616, 1621], [], []], [[1588], [1589], [], [], [1610], [], [], []], [], [], [[1646, 1647, 1665], [1636], [], [], [1676], [], [], []], [[1629, 1642], [1630], [], [], [1648, 1649, 1655, 1660, 1661, 1666, 1671], [1650, 1651, 1667, 1668], [], []], [], []], [[[1343, 1585], [], [], [], [1601, 1611], [], [], []], [[], [], [563, 568, 569, 570], [], [557, 558, 1612], [], [], [567]], [], [[], [584, 591, 592, 608], [1248], [629, 1225, 1266, 1325], [], [583, 587, 588, 598, 607], [], [637]], [[1617, 1625], [1622, 1626, 1643], [], [], [], [1656], [], [1680]], [[], [], [561, 562, 1637], [579, 580], [], [], [364, 379], []], [[], [], [], [], [], [], [], [440, 455]], [[], [589, 590, 612], [], [623, 628, 632, 633, 636], [], [417], [113, 141], [433, 441, 442, 443, 853, 854]]], [], [[], [[676, 681], [1195, 1262], [670, 688, 693, 703], [], [671, 675, 766, 767, 768, 785], [747, 761, 777], [15, 699], []], [[], [], [], [10, 104, 643], [], [], [], [133, 197, 249]], [[596, 674], [], [], [], [60, 386, 470, 575, 603], [], [394, 666], []], [], [[800, 822, 829, 836], [], [654, 686, 687, 692, 702], [], [469, 475, 486, 845], [], [], []], [[], [], [], [], [], [513], [], [446, 522, 642]], [[2, 476, 668], [], [], [], [387, 610], [], [], []]], [[[1704, 1712, 1716, 1717], [1689, 1705], [], [], [], [1718], [], []], [[], [], [], [], [1690, 1723], [331, 1719], [], [345, 360, 376, 377, 384]], [], [], [[342], [333, 336, 343, 1734], [19, 20, 349], [17, 21, 31, 32, 37], [], [], [], []], [[1728], [], [23, 33, 34, 38, 374], [375, 383], [], [], [], []], [[44, 50, 56, 934, 940], [], [], [], [47], [48, 51, 57, 68, 69], [82, 93, 94], [83, 118, 119, 124, 125, 126]], [[393], [397, 407], [], [421, 422, 454, 463], [45, 58, 70, 415], [], [103, 120, 420], []]], [[[1677, 1678, 1679], [], [361], [41, 363, 1684], [], [], [346, 351, 352, 367, 378], []], [[], [], [369, 385], [], [], [], [], []], [[], [62, 388, 398, 402, 412, 413], [], [427, 439], [408, 409], [], [431, 437, 438], [449, 450, 464]], [[54, 74, 81], [], [89], [], [], [], [], []], [], [], [[416], [], [426, 448], [], [], [], [], []], []], [[], [], [[], [], [], [], [], [], [285, 304, 313, 916], [288, 305]], [[], [], [], [], [], [], [298, 299], [306, 307]], [[], [], [], [], [148, 164], [149, 150, 151, 159, 160, 176], [193, 194, 213], [189, 195, 205, 216, 217, 220]], [[], [468, 493, 494], [], [523, 528, 535, 548], [132], [483], [190, 206, 502, 515, 521, 527], []], [[], [90, 790, 795], [], [844], [237, 247, 257], [231, 238, 248, 264, 272], [], []], [[258, 265], [259, 260, 266, 267, 273], [], [289], [], [], [], []]], [[[], [479, 496], [], [510, 537], [], [495], [503, 529, 544], [524]], [], [[], [531, 552], [128, 368], [84, 526, 532, 533, 539], [472], [396], [6, 332, 370, 434, 489, 509, 516], []], [], [[473, 474, 485], [], [536], [], [], [], [], []], [], [[447, 511], [], [], [], [], [], [], []], []]], [[[[1180], [695, 816], [1039], [], [430, 639], [], [134, 658, 1051], []], [], [[1012, 1049], [1167, 1546], [], [626, 1043, 1111, 1175], [], [], [8, 647, 770, 793, 1052, 1150], []], [], [[471, 615, 832, 841], [], [39, 95], [], [667, 1408, 1511, 1685], [1741], [660, 665, 685, 758], []], [], [[650, 762, 1015, 1099], [], [224, 1098, 1148, 1159], [], [1019, 1022, 1053], [], [899, 1018], []], []], [[[], [], [], [0, 27, 1314, 1315], [], [], [], [737]], [[], [], [3, 9, 13, 30, 191, 223], [76, 1305], [], [], [24, 26, 746, 763], [7, 99, 207]], [[1281, 1303, 1306], [], [698, 1778, 1782, 1783, 1796], [404, 487, 551], [], [], [582, 641], []], [], [[], [], [], [261, 756, 757, 813, 846], [], [], [465], [274, 736, 759]], [[], [], [142, 723, 732, 823, 837, 856], [842], [], [], [726, 796], [80]], [[782], [143], [275], [], [578], [], [564, 701], []], []], [[[], [1072, 1075, 1151], [], [], [], [171, 705, 707], [], []], [[109, 199, 724, 728, 791, 850], [1213, 1219], [], [], [741, 748, 781], [129, 722, 742], [], []], [], [], [[1054, 1090, 1113], [215, 721, 730, 765], [], [], [1162], [760, 771, 814], [], []], [[239, 776], [208, 716, 731, 755, 819], [], [], [713, 752], [158, 286, 718, 799, 801], [], []], [], []], [[[], [399, 444], [], [458, 518], [290, 517], [382, 540], [326], [14]], [538], [908], [[321, 508], [], [], [], [], [], [], []], [[240, 597, 710, 775], [], [], [], [], [], [], []], [], [], []], [[[269, 735, 739, 1673], [1708, 1736, 1761], [673, 704], [], [787, 1692], [], [904], []], [[], [], [], [], [646], [467, 512], [], [366, 403]], [[999, 1000, 1001, 1002], [], [794, 1160, 1165], [], [895, 911, 1083], [], [927], [893, 995]], [[], [371], [], [423, 452, 491], [], [405, 410, 432], [180, 372, 380, 428], [401, 504]], [[913, 981, 1715], [565, 577, 903, 926], [957, 965], [902, 949, 982], [], [], [], []], [[482, 506, 1486, 1669], [347, 520], [553], [389, 541], [], [], [140, 268, 327], []], [[], [63, 863, 912, 969, 989], [], [61, 88, 221], [], [], [], []], [[169, 429, 453, 542, 543], [492], [418], [], [198], [], [], []]], [[[309, 480], [59, 166, 177], [391, 547], [], [314], [315, 316, 322], [350, 362, 497], []], [[110, 167, 250], [], [], [], [], [1, 317], [], []], [[390, 436, 534], [], [], [], [], [], [], []], [], [], [], [], []], [[740], [[276], [753, 797], [], [], [719], [], [], []], [], [], [], [], [], []], []], [[[[], [], [5, 1307], [], [], [], [], []], [[], [], [], [786, 792, 805, 806, 826], [], [], [], [825, 831, 859]], [[203, 241], [848, 849, 1294], [], [], [40, 73, 106, 136], [154], [], []], [[827, 1308], [], [], [], [226], [219], [], []], [[], [], [246, 708], [], [], [], [209], []], [[], [], [], [121, 225, 230, 270, 271], [], [], [], [720, 727, 729, 743, 812]], [[], [96, 218, 754, 772], [], [], [], [55, 97, 828], [], []], [[196], [], [], [], [734, 738], [], [], []]], [[[], [749], [769, 804], [], [], [824], [802, 803, 815, 838, 839], []], [], [], [], [[42, 43, 116], [92, 245, 830, 857], [112, 847, 858], [], [153, 170, 214], [25, 505], [301], []], [], [], []], [], [], [[[], [], [111, 139, 186, 222], [87, 200, 778], [22, 168, 178], [53, 165, 318, 319], [], [79]], [[462, 546], [507], [35, 400, 855], [300, 460, 490], [52, 320, 323], [233, 324], [], []], [], [], [], [], [], []], [[[358, 481, 484, 498, 501], [], [], [], [], [], [], []], [], [], [], [], [], [], []], [], []]]
    ),
    
    ("small_bunny.pcd", 2, 
     [[[], [], [], [143, 148], [90, 92, 125, 140, 141], [95, 105, 116, 127, 129, 152, 153, 155], [83, 86], [24, 110, 117, 146]], [[132, 133, 134, 136, 137, 139], [], [145, 150, 151], [], [130, 154, 156], [50, 52, 54, 55, 60], [111, 114, 115, 120, 122, 126, 147], [118, 142]], [[], [], [91, 97, 104, 177, 178], [], [1, 84, 88, 99, 119, 138, 176], [2, 58, 123], [0, 61, 73, 100, 101, 107], [30, 35, 36, 102, 113, 131, 149, 175]], [[], [], [], [], [108, 112, 121, 124], [], [128], []], [[56, 96, 158, 162], [94, 159], [106, 172], [], [173], [6, 7, 25, 85, 87, 135, 171], [15, 81, 144, 174], [12, 19]], [[160, 161, 163, 164, 165, 166, 167], [49, 51, 53, 57, 59, 78, 157, 169], [], [44, 63, 65], [3, 4, 5, 82, 170], [27, 32, 37, 38, 168], [10, 11, 13, 14, 18, 20, 21, 41, 48, 77], [28, 40, 46]], [[42, 62, 64, 67, 93, 98], [69, 70, 75, 79], [71, 72, 103, 109], [], [17, 22, 29, 31, 33, 47, 80, 89], [26, 39, 43], [34, 66], []], [[8, 68, 76], [9, 45, 74], [], [], [16, 23], [], [], []]]
     ),
    
    ("small_bunny.pcd", 4, 
     [[[], [], [], [[], [], [], [], [], [[], [143], [], [148], [], [], [], []], [], []], [[], [], [], [], [], [[], [125], [], [], [], [], [90], [92]], [], [[], [], [], [140], [], [], [141], []]], [[116], [[], [], [], [], [], [152, 153], [], []], [], [105], [[127], [], [129], [95], [], [155], [], []], [], [], []], [[], [83], [], [86], [], [], [], []], [[[], [], [], [], [], [146], [24], []], [110], [], [117], [], [], [], []]], [[[], [], [], [], [], [], [[], [], [], [], [134], [132, 133, 136], [137], []], [139]], [], [[], [], [], [], [[145], [], [150], [], [], [], [], []], [151], [], []], [], [[], [130], [], [], [[], [], [], [], [], [154, 156], [], []], [], [], []], [[], [], [[], [], [], [], [54, 55], [], [], [60]], [], [50], [], [52], []], [[], [147], [[], [111], [114], [115], [], [], [], [122]], [[], [], [], [], [], [], [120], [126]], [], [], [], []], [[142], [], [118], [], [], [], [], []]], [[], [], [[], [[], [], [], [177, 178], [], [], [97], []], [], [91], [], [104], [], []], [], [[], [], [], [176], [138], [[], [], [], [1], [84], [], [], []], [], [[88], [], [99], [], [], [], [], [119]]], [[], [[], [], [], [], [], [58, 123], [], []], [], [], [], [2], [], []], [[], [[73], [], [101], [], [107], [], [], []], [], [0], [], [[100], [61], [], [], [], [], [], []], [], []], [[], [], [], [149], [[], [], [], [], [175], [], [131], []], [36], [[], [102, 113], [], [], [], [], [], []], [[35], [30], [], [], [], [], [], []]]], [[], [], [], [], [[112], [], [], [], [124], [[], [], [], [], [], [], [], [108, 121]], [], []], [], [128], []], [[[], [[162], [], [], [96], [], [], [], []], [], [], [], [], [[], [], [], [56, 158], [], [], [], []], []], [[159], [], [], [], [94], [], [], []], [[], [], [], [], [[], [106], [], [], [], [172], [], []], [], [], []], [], [173], [[], [171], [7], [[6], [], [], [], [], [], [], [85]], [], [[], [], [], [], [], [25, 135], [], []], [], [87]], [[], [[], [], [], [], [], [144], [], [15]], [81], [174], [], [], [], []], [[], [12], [19], [], [], [], [], []]], [[[[], [], [], [], [160, 163], [], [], []], [], [], [], [166], [[161, 164], [], [], [], [167], [165], [], []], [], []], [[157], [49], [], [[], [51, 53], [], [], [], [], [], [59]], [169], [], [], [[], [], [], [57], [], [], [], [78]]], [], [[], [[63], [], [65], [], [], [], [], []], [], [], [], [44], [], []], [[170], [], [], [], [], [3], [[82], [], [], [], [], [4], [], []], [5]], [[[168], [], [], [], [], [], [27], []], [], [38], [32], [], [], [37], []], [[], [], [], [], [[], [], [], [], [13], [10, 11, 14], [], []], [[], [41], [], [], [], [], [48], []], [[], [], [], [77], [18], [], [], []], [[20], [21], [], [], [], [], [], []]], [[46], [], [[], [], [28], [], [40], [], [], []], [], [], [], [], []]], [[[], [], [98], [], [[42], [], [], [], [67], [], [64], []], [], [[], [], [], [], [62, 93], [], [], []], []], [[], [], [], [], [70], [79], [[], [69, 75], [], [], [], [], [], []], []], [[[], [103], [], [], [109], [], [], []], [72], [], [], [71], [], [], []], [], [[22], [], [80], [[], [], [], [29], [], [], [31], []], [89], [47], [17], [33]], [[[43], [], [], [], [], [], [26], []], [], [39], [], [], [], [], []], [[], [[], [34], [], [], [66], [], [], []], [], [], [], [], [], []], []], [[[], [], [8], [76], [], [68], [], []], [[74], [], [], [], [[], [], [9], [], [], [45], [], []], [], [], []], [], [], [[[], [], [], [16], [23], [], [], []], [], [], [], [], [], [], []], [], [], []]]
    ),   
]    
    
            
@pytest.mark.parametrize("filename, max_depth, ground_traversal", traverse_list)    
def test_build_octree(filename, max_depth, ground_traversal):
    # Load cloud
    cloud = o3d.io.read_point_cloud(os.path.join(DATA_DIR, filename))   
    
    # Build tree
    tree = A02.build_octree(cloud, margin=(0.1,0.1,0.1), max_depth=max_depth)
    
    # Get traversal
    travel_list = A02.traverse_octree(tree)
    print(travel_list)
        
    # Check traversal list  
    # (Cheating a little and comparing the strings)
    travel_str = str(travel_list)
    ground_str = str(ground_traversal)
    assert travel_str == ground_str
    
###############################################################################
# test_do_radius_search_octree
###############################################################################

search_list = [
    ("tiny_cube.pcd", 4, (-2,2,2), 0.1,
     []     
    ),
    
    ("tiny_cube.pcd", 4, (-2,2,2), 1.8,
     [3]     
    ),
    
    ("tiny_cube.pcd", 0, (-2,2,2), 4.0,
     [1, 2, 3, 7]
    ),
    
    ("tiny_cube.pcd", 4, (-2,2,2), 4.0,
     [2, 1, 3, 7]
    ),
    
    ("tiny_cube.pcd", 4, (-2,2,2), 20.0,
     [0, 4, 2, 6, 1, 5, 3, 7]
    ),
            
    ("small_cube.pcd", 4, (0.1,0.7,-1.2), 2.5,
        [21, 37, 24, 25, 40, 41, 45, 26, 42]     
    ),
    
    ("medium_cube.pcd", 4, (2, 6.2, 4.1), 2.4,
     [  242, 252, 322, 402, 332, 412, 262, 342, 422, 352, 432, 253, 323,
        403, 333, 413, 404, 334, 414, 263, 343, 423, 353, 433, 344, 424,
        251, 321, 401, 330, 331, 410, 411, 341, 420, 421, 351, 431]
    ),
    
    ("bunny.pcd", 4, (6.79621601, 5.66879749, 8.07549858), 1.7,
         [304, 313, 288, 305, 298, 299, 306, 307, 289, 368, 370, 434, 489, 509, 
          516, 121, 225, 270, 720, 727, 729, 743, 812, 96, 754, 97, 828, 196, 734, 
          738, 112, 153, 170, 214, 505, 301, 111, 139, 186, 222, 87, 200, 778, 22, 
          168, 178, 53, 165, 318, 319, 79, 462, 546, 507, 35, 400, 855, 300, 460, 
          490, 52, 320, 323, 233, 324, 358, 481, 484, 498, 501]
     ),    
    
    ("bunny.pcd", 4, (1.6524384, 9.39138317, 0.32055977), 1.7,
         [1027,  130,  152, 1404, 1781, 1036, 1071, 1403, 1790, 1793, 1007,
          1117,  669,  611, 1087, 1132, 1278, 1510,  700,  706, 1322,  712,
          1106,  631,  711,  709, 1041,  162, 1059, 1069,  581, 1055, 1062,
          64,  725]
     ),
        
    ("small_bunny.pcd", 4, (6.6524384, 9.39138317, 3.32055977), 1.7,
        [91, 177, 178, 97]  
     ),   
]  
 
@pytest.mark.parametrize("filename, max_depth, query_point, radius, ground_indices", search_list)    
def test_do_radius_search_octree(filename, max_depth, query_point, radius, ground_indices):
    # Load cloud
    cloud = o3d.io.read_point_cloud(os.path.join(DATA_DIR, filename)) 
        
    # Build tree
    tree = A02.build_octree(cloud, margin=(0.1,0.1,0.1), max_depth=max_depth) 
    
    # Do radius search
    search_indices = A02.do_radius_search_octree(cloud, tree, np.array(query_point), radius)
    print(search_indices)
    
    # Check indices   
    np.testing.assert_equal(np.array(search_indices), 
                            np.array(ground_indices), 
                            err_msg="Wrong indices for search!")
         